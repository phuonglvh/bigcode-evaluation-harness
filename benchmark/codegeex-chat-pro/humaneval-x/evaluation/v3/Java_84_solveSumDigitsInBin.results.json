{
  "name": "Java_84_solveSumDigitsInBin",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Given a positive integer N, return the total sum of its digits in binary.\n\n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n\n    Variables:\n        @N integer\n             Constraints: 0 <= N <= 10000.\n    Output:\n         a string of binary number\n     */\n    public String solveSumDigitsInBin(int N) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                Objects.equals(s.solveSumDigitsInBin(1000), \"1\"),\n                Objects.equals(s.solveSumDigitsInBin(150), \"110\"),\n                Objects.equals(s.solveSumDigitsInBin(147), \"1100\"),\n                Objects.equals(s.solveSumDigitsInBin(333), \"1001\"),\n                Objects.equals(s.solveSumDigitsInBin(963), \"10010\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public String solve(int N) {\n        int sum = 0;\n        String numStr = Integer.toString(N);\n        for (int i = 0; i < numStr.length(); i++) {\n            sum += Character.getNumericValue(numStr.charAt(i));\n        }\n        return Integer.toBinaryString(sum);\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                Objects.equals(s.solveSumDigitsInBin(1000), \"1\"),\n                Objects.equals(s.solveSumDigitsInBin(150), \"110\"),\n                Objects.equals(s.solveSumDigitsInBin(147), \"1100\"),\n                Objects.equals(s.solveSumDigitsInBin(333), \"1001\"),\n                Objects.equals(s.solveSumDigitsInBin(963), \"10010\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1731421963,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp6c7u2t62.java:18: error: cannot find symbol\n                Objects.equals(s.solveSumDigitsInBin(1000), \"1\"),\n                                ^\n  symbol:   method solveSumDigitsInBin(int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp6c7u2t62.java:19: error: cannot find symbol\n                Objects.equals(s.solveSumDigitsInBin(150), \"110\"),\n                                ^\n  symbol:   method solveSumDigitsInBin(int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp6c7u2t62.java:20: error: cannot find symbol\n                Objects.equals(s.solveSumDigitsInBin(147), \"1100\"),\n                                ^\n  symbol:   method solveSumDigitsInBin(int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp6c7u2t62.java:21: error: cannot find symbol\n                Objects.equals(s.solveSumDigitsInBin(333), \"1001\"),\n                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}