{
  "name": "Java_93_encode",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Write a function that takes a message, and encodes in such a\n    way that it swaps case of all letters, replaces all vowels in\n    the message with the letter that appears 2 places ahead of that\n    vowel in the english alphabet.\n    Assume only letters.\n\n    Examples:\n    >>> encode(\"test\")\n    \"TGST\"\n    >>> encode(\"This is a message\")\n    \"tHKS KS C MGSSCGG\"\n     */\n    public String encode(String message) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                Objects.equals(s.encode(\"TEST\"), \"tgst\"),\n                Objects.equals(s.encode(\"Mudasir\"), \"mWDCSKR\"),\n                Objects.equals(s.encode(\"YES\"), \"ygs\"),\n                Objects.equals(s.encode(\"This is a message\"), \"tHKS KS C MGSSCGG\"),\n                Objects.equals(s.encode(\"I DoNt KnOw WhAt tO WrItE\"), \"k dQnT kNqW wHcT Tq wRkTg\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\n\nclass Problem {\n    public String encode(String message) {\n        String vowels = \"aeiouAEIOU\";\n        Map<Character, Character> vowelsReplace = new HashMap<>();\n        for (char c : vowels.toCharArray()) {\n            vowelsReplace.put(c, (char) (c + 2));\n        }\n        StringBuilder sb = new StringBuilder();\n        for (char c : message.toCharArray()) {\n            if (Character.isUpperCase(c)) {\n                sb.append(Character.toLowerCase(c));\n            } else if (Character.isLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n            }\n            if (vowelsReplace.containsKey(c)) {\n                sb.setCharAt(sb.length() - 1, vowelsReplace.get(c));\n            }\n        }\n        return sb.toString();\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                Objects.equals(s.encode(\"TEST\"), \"tgst\"),\n                Objects.equals(s.encode(\"Mudasir\"), \"mWDCSKR\"),\n                Objects.equals(s.encode(\"YES\"), \"ygs\"),\n                Objects.equals(s.encode(\"This is a message\"), \"tHKS KS C MGSSCGG\"),\n                Objects.equals(s.encode(\"I DoNt KnOw WhAt tO WrItE\"), \"k dQnT kNqW wHcT Tq wRkTg\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1731426606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9yj9o0pz.java:37)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}