{
  "name": "Java_71_triangleAreaRounded",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle.\n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater\n    than the third side.\n    Example:\n    triangleAreaRounded(3, 4, 5) == 6.00\n    triangleAreaRounded(1, 2, 10) == -1\n     */\n    public double triangleAreaRounded(double a, double b, double c) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.triangleAreaRounded(3, 4, 5) == 6.00,\n                s.triangleAreaRounded(1, 2, 10) == -1,\n                s.triangleAreaRounded(4, 8, 5) == 8.18,\n                s.triangleAreaRounded(2, 2, 2) == 1.73,\n                s.triangleAreaRounded(1, 2, 3) == -1,\n                s.triangleAreaRounded(10, 5, 7) == 16.25,\n                s.triangleAreaRounded(2, 6, 3) == -1,\n                s.triangleAreaRounded(1, 1, 1) == 0.43,\n                s.triangleAreaRounded(2, 2, 10) == -1\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public double triangleArea(double a, double b, double c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n        }\n        double s = (a + b + c) / 2;\n        double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        area = Math.round(area * 100.0) / 100.0;\n        return area;\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.triangleAreaRounded(3, 4, 5) == 6.00,\n                s.triangleAreaRounded(1, 2, 10) == -1,\n                s.triangleAreaRounded(4, 8, 5) == 8.18,\n                s.triangleAreaRounded(2, 2, 2) == 1.73,\n                s.triangleAreaRounded(1, 2, 3) == -1,\n                s.triangleAreaRounded(10, 5, 7) == 16.25,\n                s.triangleAreaRounded(2, 6, 3) == -1,\n                s.triangleAreaRounded(1, 1, 1) == 0.43,\n                s.triangleAreaRounded(2, 2, 10) == -1\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1731426596,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmptuvjnvgr.java:19: error: cannot find symbol\n                s.triangleAreaRounded(3, 4, 5) == 6.00,\n                 ^\n  symbol:   method triangleAreaRounded(int,int,int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmptuvjnvgr.java:20: error: cannot find symbol\n                s.triangleAreaRounded(1, 2, 10) == -1,\n                 ^\n  symbol:   method triangleAreaRounded(int,int,int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmptuvjnvgr.java:21: error: cannot find symbol\n                s.triangleAreaRounded(4, 8, 5) == 8.18,\n                 ^\n  symbol:   method triangleAreaRounded(int,int,int)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmptuvjnvgr.java:22: error: cannot find symbol\n                s.triangleAreaRounded(2, 2, 2) == 1.73,\n                 ^\n  symbol:   method triangleAreaRounded(int,int,int)\n  location: vari",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}