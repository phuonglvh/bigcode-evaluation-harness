{
  "name": "Java_142_sumSquaresExtra",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a\n    multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not\n    change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries.\n\n    Examples:\n    For lst = [1,2,3] the output should be 6\n    For lst = []  the output should be 0\n    For lst = [-1,-5,2,-1,-5]  the output should be -126\n     */\n    public int sumSquaresExtra(List<Integer> lst) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.sumSquaresExtra(Arrays.asList(1,2,3)) == 6,\n                s.sumSquaresExtra(Arrays.asList(1,4,9)) == 14,\n                s.sumSquaresExtra(List.of()) == 0,\n                s.sumSquaresExtra(Arrays.asList(1,1,1,1,1,1,1,1,1)) == 9,\n                s.sumSquaresExtra(Arrays.asList(-1,-1,-1,-1,-1,-1,-1,-1,-1)) == -3,\n                s.sumSquaresExtra(List.of(0)) == 0,\n                s.sumSquaresExtra(Arrays.asList(-1,-5,2,-1,-5)) == -126,\n                s.sumSquaresExtra(Arrays.asList(-56,-99,1,0,-2)) == 3030,\n                s.sumSquaresExtra(Arrays.asList(-1,0,0,0,0,0,0,0,-1)) == 0,\n                s.sumSquaresExtra(Arrays.asList(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)) == -14196,\n                s.sumSquaresExtra(Arrays.asList(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)) == -1448\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public int sumSquares(List<Integer> lst) {\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 3 == 0) {\n                result.add(lst.get(i) * lst.get(i));\n            } else if (i % 4 == 0 && i % 3 != 0) {\n                result.add(lst.get(i) * lst.get(i) * lst.get(i));\n            } else {\n                result.add(lst.get(i));\n            }\n        }\n        int sum = 0;\n        for (int num : result) {\n            sum += num;\n        }\n        return sum;\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.sumSquaresExtra(Arrays.asList(1,2,3)) == 6,\n                s.sumSquaresExtra(Arrays.asList(1,4,9)) == 14,\n                s.sumSquaresExtra(List.of()) == 0,\n                s.sumSquaresExtra(Arrays.asList(1,1,1,1,1,1,1,1,1)) == 9,\n                s.sumSquaresExtra(Arrays.asList(-1,-1,-1,-1,-1,-1,-1,-1,-1)) == -3,\n                s.sumSquaresExtra(List.of(0)) == 0,\n                s.sumSquaresExtra(Arrays.asList(-1,-5,2,-1,-5)) == -126,\n                s.sumSquaresExtra(Arrays.asList(-56,-99,1,0,-2)) == 3030,\n                s.sumSquaresExtra(Arrays.asList(-1,0,0,0,0,0,0,0,-1)) == 0,\n                s.sumSquaresExtra(Arrays.asList(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)) == -14196,\n                s.sumSquaresExtra(Arrays.asList(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)) == -1448\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1731425969,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:27: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(1,2,3)) == 6,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:28: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(1,4,9)) == 14,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:29: error: cannot find symbol\n                s.sumSquaresExtra(List.of()) == 0,\n                 ^\n  symbol:   method sumSquaresExtra(List<Object>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:30: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(1,1,1,1,1,1,1,1,1)) == 9,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:31: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(-1,-1,-1,-1,-1,-1,-1,-1,-1)) == -3,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:32: error: cannot find symbol\n                s.sumSquaresExtra(List.of(0)) == 0,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:33: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(-1,-5,2,-1,-5)) == -126,\n                 ^\n  symbol:   method sumSquaresExtra(List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpfjd7_vhu.java:34: error: cannot find symbol\n                s.sumSquaresExtra(Arrays.asList(-56,-99,1,0,-2)) =",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}