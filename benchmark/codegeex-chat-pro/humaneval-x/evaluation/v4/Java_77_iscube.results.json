{
  "name": "Java_77_iscube",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Write a function that takes an integer a and returns true\n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> true\n    iscube(2) ==> false\n    iscube(-1) ==> true\n    iscube(64) ==> true\n    iscube(0) ==> true\n    iscube(180) ==> false\n     */\n    public boolean iscube(int a) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.iscube(1),\n                !s.iscube(2),\n                s.iscube(-1),\n                s.iscube(64),\n                !s.iscube(180),\n                s.iscube(1000),\n                s.iscube(0),\n                !s.iscube(1729)\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public boolean iscube(int a) {\n        a = Math.abs(a);\n        return (int) Math.round(Math.pow(a, 1.0 / 3)) ** 3 == a;\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.iscube(1),\n                !s.iscube(2),\n                s.iscube(-1),\n                s.iscube(64),\n                !s.iscube(180),\n                s.iscube(1000),\n                s.iscube(0),\n                !s.iscube(1729)\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1731425938,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp8j2p93vq.java:8: error: illegal start of expression\n        return (int) Math.round(Math.pow(a, 1.0 / 3)) ** 3 == a;\n                                                       ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}