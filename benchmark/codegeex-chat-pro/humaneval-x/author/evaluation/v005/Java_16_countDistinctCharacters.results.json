{
  "name": "Java_16_countDistinctCharacters",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> countDistinctCharacters(\"xyzXYZ\")\n    3\n    >>> countDistinctCharacters(\"Jerry\")\n    4\n     */\n    public int countDistinctCharacters(String string) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.countDistinctCharacters(\"\") == 0,\n                s.countDistinctCharacters(\"abcde\") == 5,\n                s.countDistinctCharacters(\"abcde\" + \"cade\" + \"CADE\") == 5,\n                s.countDistinctCharacters(\"aaaaAAAAaaaa\") == 1,\n                s.countDistinctCharacters(\"Jerry jERRY JeRRRY\") == 5\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\n\nclass Problem {\n    public int countDistinctCharacters(String string) {\n        return new HashSet<Character>(Arrays.asList(string.toLowerCase().toCharArray())).size();\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.countDistinctCharacters(\"\") == 0,\n                s.countDistinctCharacters(\"abcde\") == 5,\n                s.countDistinctCharacters(\"abcde\" + \"cade\" + \"CADE\") == 5,\n                s.countDistinctCharacters(\"aaaaAAAAaaaa\") == 1,\n                s.countDistinctCharacters(\"Jerry jERRY JeRRRY\") == 5\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732115032,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmp2uf0xee9.java:6: error: no suitable constructor found for HashSet(List<char[]>)\n        return new HashSet<Character>(Arrays.asList(string.toLowerCase().toCharArray())).size();\n               ^\n    constructor HashSet.HashSet(Collection<? extends Character>) is not applicable\n      (argument mismatch; inference variable T has incompatible bounds\n          upper bounds: Character,Object\n          lower bounds: char[])\n    constructor HashSet.HashSet(int) is not applicable\n      (argument mismatch; no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n  where T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}