{
  "name": "Java_162_stringToMd5",
  "language": "java",
  "prompt": "import java.math.BigInteger;\nimport java.security.*;\nimport java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Given a string \"text\", return its md5 hash equivalent string with length being 32.\n    If \"text\" is an empty string, return Optional.empty().\n    \n    >>> stringToMd5(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\n     */\n    public Optional<String> stringToMd5(String text) throws NoSuchAlgorithmException {\n",
  "tests": "\n    }\n    public static void main(String[] args) throws NoSuchAlgorithmException {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.stringToMd5(\"Hello world\").get().equals(\"3e25960a79dbc69b674cd4ec67a72c62\"),\n                s.stringToMd5(\"\").isEmpty(),\n                s.stringToMd5(\"A B C\").get().equals(\"0ef78513b0cb8cef12743f5aeb35f888\"),\n                s.stringToMd5(\"password\").get().equals(\"5f4dcc3b5aa765d61d8327deb882cf99\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\nimport java.math.BigInteger;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Optional;\n\nclass Problem {\n    public Optional<String> stringToMd5(String text) throws NoSuchAlgorithmException {\n        if (text == null) {\n            return Optional.empty();\n        }\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        md.update(text.getBytes());\n        byte[] digest = md.digest();\n        BigInteger no = new BigInteger(1, digest);\n        String hashText = no.toString(16);\n        while (hashText.length() < 32) {\n            hashText = \"0\" + hashText;\n        }\n        return Optional.of(hashText);\n\n    }\n    public static void main(String[] args) throws NoSuchAlgorithmException {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.stringToMd5(\"Hello world\").get().equals(\"3e25960a79dbc69b674cd4ec67a72c62\"),\n                s.stringToMd5(\"\").isEmpty(),\n                s.stringToMd5(\"A B C\").get().equals(\"0ef78513b0cb8cef12743f5aeb35f888\"),\n                s.stringToMd5(\"password\").get().equals(\"5f4dcc3b5aa765d61d8327deb882cf99\")\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732065562,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jd0nrgx.java:39)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}