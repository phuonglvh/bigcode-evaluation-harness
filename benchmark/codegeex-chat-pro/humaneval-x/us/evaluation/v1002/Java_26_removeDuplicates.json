{"name": "Java_26_removeDuplicates", "language": "java", "prompt": "import java.util.*;\nimport java.lang.*;\nimport java.util.stream.Collectors;\n\nclass Solution {\n    /**\n    From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> removeDuplicates(Array.asList(1, 2, 3, 2, 4))\n    [1, 3, 4]\n     */\n    public List<Integer> removeDuplicates(List<Integer> numbers) {\n", "completions": ["\nimport java.util.*;\nimport java.util.stream.Collectors;\n\nclass Problem {\n    public List<Integer> removeDuplicates(List<Integer> numbers) {\n        Map<Integer, Long> counter = numbers.stream()\n                                             .collect(Collectors.groupingBy(e -> e, Collectors.counting()));\n        return numbers.stream()\n                      .filter(n -> counter.get(n) <= 1)\n                      .collect(Collectors.toList());"], "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.removeDuplicates(new ArrayList<>(List.of())).equals(List.of()),\n                s.removeDuplicates(new ArrayList<>(Arrays.asList(1, 2, 3, 4))).equals(Arrays.asList(1, 2, 3, 4)),\n                s.removeDuplicates(new ArrayList<>(Arrays.asList(1, 2, 3, 2, 4, 3, 5))).equals(Arrays.asList(1, 4, 5))\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}"}