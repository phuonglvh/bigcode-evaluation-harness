{
  "name": "Java_134_checkIfLastCharIsALetter",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Create a function that returns true if the last character\n    of a given string is an alphabetical character and is not\n    a part of a word, and false otherwise.\n    Note: \"word\" is a group of characters separated by space.\n\n    Examples:\n    checkIfLastCharIsALetter(\"apple pie\") -> false\n    checkIfLastCharIsALetter(\"apple pi e\") -> true\n    checkIfLastCharIsALetter(\"apple pi e \") -> false\n    checkIfLastCharIsALetter(\"\") -> false\n     */\n    public boolean checkIfLastCharIsALetter(String txt) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.checkIfLastCharIsALetter(\"apple\" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pi e\" ) == true,\n                s.checkIfLastCharIsALetter(\"eeeee\" ) == false,\n                s.checkIfLastCharIsALetter(\"A\" ) == true,\n                s.checkIfLastCharIsALetter(\"Pumpkin pie \" ) == false,\n                s.checkIfLastCharIsALetter(\"Pumpkin pie 1\" ) == false,\n                s.checkIfLastCharIsALetter(\"\" ) == false,\n                s.checkIfLastCharIsALetter(\"eeeee e \" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pie\" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pi e \" ) == false\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public boolean checkIfLastCharIsALetter(String txt) {\n        String[] words = txt.split(\" \");\n        String lastWord = words[words.length - 1];\n        char lastChar = lastWord.charAt(lastWord.length() - 1);\n        return lastChar >= 'a' && lastChar <= 'z' || lastChar >= 'A' && lastChar <= 'Z';\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.checkIfLastCharIsALetter(\"apple\" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pi e\" ) == true,\n                s.checkIfLastCharIsALetter(\"eeeee\" ) == false,\n                s.checkIfLastCharIsALetter(\"A\" ) == true,\n                s.checkIfLastCharIsALetter(\"Pumpkin pie \" ) == false,\n                s.checkIfLastCharIsALetter(\"Pumpkin pie 1\" ) == false,\n                s.checkIfLastCharIsALetter(\"\" ) == false,\n                s.checkIfLastCharIsALetter(\"eeeee e \" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pie\" ) == false,\n                s.checkIfLastCharIsALetter(\"apple pi e \" ) == false\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732160264,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException: Index -1 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)\n\tat java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)\n\tat java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)\n\tat java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\n\tat java.base/java.lang.String.checkIndex(String.java:4881)\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:46)\n\tat java.base/java.lang.String.charAt(String.java:1582)\n\tat Problem.checkIfLastCharIsALetter(tmpfh0sejzf.java:9)\n\tat Problem.main(tmpfh0sejzf.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}