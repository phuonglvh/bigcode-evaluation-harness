{
  "name": "Java_158_findMax",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    findMax([\"name\", \"of\", \"string\"]) == \"string\"\n    findMax([\"name\", \"enam\", \"game\"]) == \"enam\"\n    findMax([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n     */\n    public String findMax(List<String> words) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.compare(Arrays.asList(1, 2, 3, 4, 5, 1), Arrays.asList(1, 2, 3, 4, 2, -2)).equals(Arrays.asList(0, 0, 0, 0, 3, 3)),\n                s.compare(Arrays.asList(0,5,0,0,0,4), Arrays.asList(4,1,1,0,0,-2)).equals(Arrays.asList(4,4,1,0,0,6)),\n                s.compare(Arrays.asList(1, 2, 3, 4, 5, 1), Arrays.asList(1, 2, 3, 4, 2, -2)).equals(Arrays.asList(0, 0, 0, 0, 3, 3)),\n                s.compare(Arrays.asList(0, 0, 0, 0, 0, 0), Arrays.asList(0, 0, 0, 0, 0, 0)).equals(Arrays.asList(0, 0, 0, 0, 0, 0)),\n                s.compare(Arrays.asList(1, 2, 3), Arrays.asList(-1, -2, -3)).equals(Arrays.asList(2, 4, 6)),\n                s.compare(Arrays.asList(1, 2, 3, 5), Arrays.asList(-1, 2, 3, 4)).equals(Arrays.asList(2, 0, 0, 1))\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public String findMax(List<String> words) {\n        Collections.sort(words, new Comparator<String>() {\n            @Override\n            public int compare(String a, String b) {\n                int setA = new HashSet<Character>(Arrays.asList(a.toCharArray())).size();\n                int setB = new HashSet<Character>(Arrays.asList(b.toCharArray())).size();\n                if (setA != setB) {\n                    return setB - setA;\n                } else {\n                    return a.compareTo(b);\n                }\n            }\n        });\n        return words.get(0);\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.compare(Arrays.asList(1, 2, 3, 4, 5, 1), Arrays.asList(1, 2, 3, 4, 2, -2)).equals(Arrays.asList(0, 0, 0, 0, 3, 3)),\n                s.compare(Arrays.asList(0,5,0,0,0,4), Arrays.asList(4,1,1,0,0,-2)).equals(Arrays.asList(4,4,1,0,0,6)),\n                s.compare(Arrays.asList(1, 2, 3, 4, 5, 1), Arrays.asList(1, 2, 3, 4, 2, -2)).equals(Arrays.asList(0, 0, 0, 0, 3, 3)),\n                s.compare(Arrays.asList(0, 0, 0, 0, 0, 0), Arrays.asList(0, 0, 0, 0, 0, 0)).equals(Arrays.asList(0, 0, 0, 0, 0, 0)),\n                s.compare(Arrays.asList(1, 2, 3), Arrays.asList(-1, -2, -3)).equals(Arrays.asList(2, 4, 6)),\n                s.compare(Arrays.asList(1, 2, 3, 5), Arrays.asList(-1, 2, 3, 4)).equals(Arrays.asList(2, 0, 0, 1))\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732154584,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpcw9j8xlz.java:10: error: no suitable constructor found for HashSet(List<char[]>)\n                int setA = new HashSet<Character>(Arrays.asList(a.toCharArray())).size();\n                           ^\n    constructor HashSet.HashSet(Collection<? extends Character>) is not applicable\n      (argument mismatch; inference variable T has incompatible bounds\n          upper bounds: Character,Object\n          lower bounds: char[])\n    constructor HashSet.HashSet(int) is not applicable\n      (argument mismatch; no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n  where T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpcw9j8xlz.java:11: error: no suitable constructor found for HashSet(List<char[]>)\n                int setB = new HashSet<Character>(Arrays.asList(b.toCharArray())).size();\n                           ^\n    constructor HashSet.HashSet(Collection<? extends Character>) is not applicable\n      (argument mismatch; inference variable T has incompatible bounds\n          upper bounds: Character,Object\n          lower bounds: char[])\n    constructor HashSet.HashSet(int) is not applicable\n      (argument mismatch; no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n  where T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpcw9j8xlz.java:25: error: cannot find symbol\n                s.compare(Arrays.asList(1, 2, 3, 4, 5, 1), Arrays.asList(1, 2, 3, 4, 2, -2)).equals(Arrays.asList(0, 0, 0, 0, 3, 3)),\n                 ^\n  symbol:   method compare(List<Integer>,List<Integer>)\n  location: variable s of type Problem\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpcw9j8xlz.java:26: error: cannot find symbol\n                s.compare(Arrays.asList(0,5,0,0,0,4), Arrays.asList(4,1,1,0,0,-2)).equals(Arrays.asList(4,4,1,0,0,6)),\n                 ^\n  symbol:   method compare",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}