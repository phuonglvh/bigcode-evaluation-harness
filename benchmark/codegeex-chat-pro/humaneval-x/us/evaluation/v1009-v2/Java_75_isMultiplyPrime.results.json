{
  "name": "Java_75_isMultiplyPrime",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100.\n    Example:\n    isMultiplyPrime(30) == true\n    30 = 2 * 3 * 5\n     */\n    public boolean isMultiplyPrime(int a) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                !s.isMultiplyPrime(5),\n                s.isMultiplyPrime(30),\n                s.isMultiplyPrime(8),\n                !s.isMultiplyPrime(10),\n                s.isMultiplyPrime(125),\n                s.isMultiplyPrime(3 * 5 * 7),\n                !s.isMultiplyPrime(3 * 6 * 7),\n                !s.isMultiplyPrime(9 * 9 * 9),\n                !s.isMultiplyPrime(11 * 9 * 9),\n                s.isMultiplyPrime(11 * 13 * 7)\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public boolean isMultiplyPrime(int a) {\n        boolean isPrime(int n) {\n            for (int j = 2; j < n; j++) {\n                if (n % j == 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        for (int i = 2; i < 101; i++) {\n            if (!isPrime(i)) continue;\n            for (int j = 2; j < 101; j++) {\n                if (!isPrime(j)) continue;\n                for (int k = 2; k < 101; k++) {\n                    if (!isPrime(k)) continue;\n                    if (i * j * k == a) return true;\n                }\n            }\n        }\n        return false;\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                !s.isMultiplyPrime(5),\n                s.isMultiplyPrime(30),\n                s.isMultiplyPrime(8),\n                !s.isMultiplyPrime(10),\n                s.isMultiplyPrime(125),\n                s.isMultiplyPrime(3 * 5 * 7),\n                !s.isMultiplyPrime(3 * 6 * 7),\n                !s.isMultiplyPrime(9 * 9 * 9),\n                !s.isMultiplyPrime(11 * 9 * 9),\n                s.isMultiplyPrime(11 * 13 * 7)\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732154533,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpd_hn__5u.java:7: error: ';' expected\n        boolean isPrime(int n) {\n                       ^\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpd_hn__5u.java:7: error: ';' expected\n        boolean isPrime(int n) {\n                             ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}