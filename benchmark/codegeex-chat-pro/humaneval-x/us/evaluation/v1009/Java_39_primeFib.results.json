{
  "name": "Java_39_primeFib",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    primeFib returns n-th number that is a Fibonacci number and it's also prime.\n    >>> primeFib(1)\n    2\n    >>> primeFib(2)\n    3\n    >>> primeFib(3)\n    5\n    >>> primeFib(4)\n    13\n    >>> primeFib(5)\n    89\n     */\n    public int primeFib(int n) {\n",
  "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.primeFib(1) == 2,\n                s.primeFib(2) == 3,\n                s.primeFib(3) == 5,\n                s.primeFib(4) == 13,\n                s.primeFib(5) == 89,\n                s.primeFib(6) == 233,\n                s.primeFib(7) == 1597,\n                s.primeFib(8) == 28657,\n                s.primeFib(9) == 514229,\n                s.primeFib(10) == 433494437\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
  "results": [
    {
      "program": "\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public int primeFib(int n) {\n        boolean isPrime(int p) {\n            if (p < 2) {\n                return false;\n            }\n            for (int k = 2; k <= Math.min((int) Math.sqrt(p) + 1, p - 1); k++) {\n                if (p % k == 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        List<Integer> f = new ArrayList<>(Arrays.asList(0, 1));\n        while (true) {\n            f.add(f.get(f.size() - 1) + f.get(f.size() - 2));\n            if (isPrime(f.get(f.size() - 1))) {\n                n -= 1;\n            }\n            if (n == 0) {\n                return f.get(f.size() - 1);\n            }\n        }\n\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.primeFib(1) == 2,\n                s.primeFib(2) == 3,\n                s.primeFib(3) == 5,\n                s.primeFib(4) == 13,\n                s.primeFib(5) == 89,\n                s.primeFib(6) == 233,\n                s.primeFib(7) == 1597,\n                s.primeFib(8) == 28657,\n                s.primeFib(9) == 514229,\n                s.primeFib(10) == 433494437\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}",
      "timestamp": 1732036359,
      "stdout": "",
      "stderr": "/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpbv6fwp1h.java:7: error: ';' expected\n        boolean isPrime(int p) {\n                       ^\n/var/folders/lb/nqc5cbfd3yb2jjr65__gy1gm0000gn/T/tmpbv6fwp1h.java:7: error: ';' expected\n        boolean isPrime(int p) {\n                             ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}