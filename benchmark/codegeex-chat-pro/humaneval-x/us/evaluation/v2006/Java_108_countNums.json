{"name": "Java_108_countNums", "language": "java", "prompt": "import java.util.*;\nimport java.lang.*;\n\nclass Solution {\n    /**\n    Write a function countNums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> countNums(Arrays.asList()) == 0\n    >>> countNums(Arrays.asList(-1, 11, -11)) == 1\n    >>> countNums(Arrays.asList(1, 1, 2)) == 3\n     */\n    public int countNums(List<Integer> arr) {\n", "completions": ["\n// language: Java\nimport java.util.*;\nimport java.lang.*;\n\nclass Problem {\n    public int countNums(List<Integer> arr) {\n        int count = 0;\n        for (int num : arr) {\n            if (digitsSum(num) > 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    private int digitsSum(int n) {\n        int neg = 1;\n        if (n < 0) {\n            n = -n;\n            neg = -1;\n        }\n        String str = Integer.toString(n);\n        int[] digits = new int[str.length()];\n        for (int i = 0; i < str.length(); i++) {\n            digits[i] = Character.getNumericValue(str.charAt(i));\n        }\n        digits[0] = digits[0] * neg;\n        int sum = 0;\n        for (int digit : digits) {\n            sum += digit;\n        }\n        return sum;"], "tests": "\n    }\n    public static void main(String[] args) {\n        Problem s = new Problem();\n        List<Boolean> correct = Arrays.asList(\n                s.countNums(List.of()) == 0,\n                s.countNums(Arrays.asList(-1, -2, 0)) == 0,\n                s.countNums(Arrays.asList(1, 1, 2, -2, 3, 4, 5)) == 6,\n                s.countNums(Arrays.asList(1, 6, 9, -6, 0, 1, 5)) == 5,\n                s.countNums(Arrays.asList(1, 100, 98, -7, 1, -1)) == 4,\n                s.countNums(Arrays.asList(12, 23, 34, -45, -56, 0)) == 5,\n                s.countNums(Arrays.asList(-0, (int) Math.pow(1, 0))) == 1,\n                s.countNums(List.of(1)) == 1\n        );\n        if (correct.contains(false)) {\n            throw new AssertionError();\n        }\n    }\n}"}