[["import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<String>(Stream.of(arr).filter(i -> i <= 9l).sorted(Collections.reverseOrder()).map(Problem::toStr).collect(Collectors.toList()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> temp = new ArrayList<>();\n        ArrayList<String> output = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                temp.add(arr.get(i));\n            }\n        }\n        Collections.reverse(temp);\n        for(int i = 0; i < temp.size(); i++){\n            output.add(String.valueOf(temp.get(i)));\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++)\n            if (arr.get(i) >= 1 && arr.get(i) <= 9)\n                a.add(arr.get(i).intValue());\n        Collections.reverse(a);\n        ArrayList<String> s = new ArrayList<String>();\n        for (int i = 0; i < a.size(); i++)\n            switch (a.get(i)) {\n                case 1:\n                    s.add(\"One\");\n                    break;\n                case 2:\n                    s.add(\"Two\");\n                    break;\n                case 3:\n                    s.add(\"Three\");\n                    break;\n                case 4:\n                    s.add(\"Four\");\n                    break;\n                case 5:\n                    s.add(\"Five\");\n                    break;\n                case 6:\n                    s.add(\"Six\");\n                    break;\n                case 7:\n                    s.add(\"Seven\");\n                    break;\n                case 8:\n                    s.add(\"Eight\");\n                    break;\n                case 9:\n                    s.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        return s;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<>();\n        int j = 1;\n        for (int i = 0; i < arr.size(); ++i)\n            if (1 <= arr.get(i) && arr.get(i) <= 9) {\n                ret.add(String.valueOf(j));\n                ++j;\n            }\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        arr.stream()\n        .filter(n -> n <= 9 && n >= 1)\n        .forEach(n -> result.add(Integer.toString(n).replaceAll(\"[0-9]\", m -> {\n            switch (m.group()) {\n                case \"1\":\n                    return \"One\";\n                case \"2\":\n                    return \"Two\";\n                case \"3\":\n                    return \"Three\";\n                case \"4\":\n                    return \"Four\";\n                case \"5\":\n                    return \"Five\";\n                case \"6\":\n                    return \"Six\";\n                case \"7\":\n                    return \"Seven\";\n                case \"8\":\n                    return \"Eight\";\n                case \"9\":\n                    return \"Nine\";\n                default:\n                    return \"\";\n            }\n        })));\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // your code here\n        ArrayList<String> strings = new ArrayList<String>();\n        ArrayList<Integer> integers = new ArrayList<Integer>();\n        int count = 0;\n        for(Long integer : arr){\n            if(integer > 0 && integer < 10){\n                integers.add(integer.intValue());\n            }\n        }\n        Collections.reverse(integers);\n        for(Integer integer : integers){\n            strings.add(Integer.toString(integer));\n        }\n        return strings;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.size()==0) return new ArrayList<String>();\n        ArrayList<Long> temp=new ArrayList<Long>();\n        for(long i:arr){\n            if(i>=1&&i<=9)temp.add(i);\n        }\n        Collections.reverse(temp);\n        ArrayList<String> res=new ArrayList<String>();\n        for(long i:temp){\n            if(i==1)res.add(\"One\");\n            if(i==2)res.add(\"Two\");\n            if(i==3)res.add(\"Three\");\n            if(i==4)res.add(\"Four\");\n            if(i==5)res.add(\"Five\");\n            if(i==6)res.add(\"Six\");\n            if(i==7)res.add(\"Seven\");\n            if(i==8)res.add(\"Eight\");\n            if(i==9)res.add(\"Nine\");\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\n            if (arr.get(i) <= 9 && arr.get(i) >= 1)\n                ans.add(String.valueOf(arr.get(i)));\n        Collections.reverse(ans);\n        ArrayList<String> map = new ArrayList<>(Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"));\n        for (int i = 0; i < ans.size(); i++)\n            ans.set(i, map.get(Integer.parseInt(ans.get(i)) - 1));\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> output = new ArrayList<String>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for (Long num : arr) {\n            if (num > 0 && num < 10) {\n                temp.add(num);\n            }\n        }\n        Collections.sort(temp);\n        Collections.reverse(temp);\n        for (Long num : temp) {\n            switch (num) {\n                case 1:\n                    output.add(\"One\");\n                    break;\n                case 2:\n                    output.add(\"Two\");\n                    break;\n                case 3:\n                    output.add(\"Three\");\n                    break;\n                case 4:\n                    output.add(\"Four\");\n                    break;\n                case 5:\n                    output.add(\"Five\");\n                    break;\n                case 6:\n                    output.add(\"Six\");\n                    break;\n                case 7:\n                    output.add(\"Seven\");\n                    break;\n                case 8:\n                    output.add(\"Eight\");\n                    break;\n                case 9:\n                    output.add(\"Nine\");\n                    break;\n            }\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<>(Stream.of(arr).map(x -> {\n            if(x >= 1 && x <= 9) return String.valueOf(x);\n            return null;\n        }).filter(x -> x != null).sorted(Comparator.reverseOrder()).map(x -> {\n            switch(x) {\n                case \"1\": return \"One\";\n                case \"2\": return \"Two\";\n                case \"3\": return \"Three\";\n                case \"4\": return \"Four\";\n                case \"5\": return \"Five\";\n                case \"6\": return \"Six\";\n                case \"7\": return \"Seven\";\n                case \"8\": return \"Eight\";\n                case \"9\": return \"Nine\";\n                default: return null;\n            }\n        }).filter(x -> x != null).collect(Collectors.toList()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for(long i : arr) {\n            if(i < 1 || i > 9) continue;\n            res.add(byLength(i));\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> output = new ArrayList<String>();\n        for(long num : arr){\n            if(num >= 1 && num <= 9) output.add(num + \"\");\n        }\n        Collections.reverse(output);\n        for(int i = 0; i < output.size(); i++){\n            output.set(i, output.get(i).charAt(0) + \"\");\n            switch (output.get(i)){\n                case \"1\": output.set(i, \"One\"); break;\n                case \"2\": output.set(i, \"Two\"); break;\n                case \"3\": output.set(i, \"Three\"); break;\n                case \"4\": output.set(i, \"Four\"); break;\n                case \"5\": output.set(i, \"Five\"); break;\n                case \"6\": output.set(i, \"Six\"); break;\n                case \"7\": output.set(i, \"Seven\"); break;\n                case \"8\": output.set(i, \"Eight\"); break;\n                case \"9\": output.set(i, \"Nine\"); break;\n            }\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] nums = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> result = new ArrayList<>();\n        if(arr.isEmpty()) {\n            return result;\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            if(temp >= 1 && temp <= 9) {\n                result.add(nums[temp - 1]);\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Create an array array list with values of \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\",\n        // \"Eight\", \"Nine\" and a temporary array array list to store the values.\n        ArrayList<String> result = new ArrayList<String>(Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"));\n        ArrayList<String> temp = new ArrayList<String>();\n        // Iterate the array array list.\n        for (Long num: arr) {\n            // Check if the value is a valid number.\n            if (num > 0 && num <= 9) {\n                // If it is, store it in the temporary array array list.\n                temp.add(result.get((int)num - 1));\n            }\n        }\n        // Reverse the temporary array array list and return it.\n        return new ArrayList<String>(temp.subList(0, temp.size()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Integer> list = arr.stream().filter(x -> x >= 1 && x <= 9).map(x -> (int) x).collect(Collectors.toList());\n        Collections.reverse(list);\n        return list.stream().map(x -> {\n            switch(x) {\n                case 1:\n                    return \"One\";\n                case 2:\n                    return \"Two\";\n                case 3:\n                    return \"Three\";\n                case 4:\n                    return \"Four\";\n                case 5:\n                    return \"Five\";\n                case 6:\n                    return \"Six\";\n                case 7:\n                    return \"Seven\";\n                case 8:\n                    return \"Eight\";\n                case 9:\n                    return \"Nine\";\n                default:\n                    throw new RuntimeException(\"strange number\");\n            }\n        }).collect(Collectors.toCollection(() -> new ArrayList<String>()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        ArrayList<Integer> arr2 = new ArrayList<Integer>();\n        for(Long x : arr)\n            arr2.add((int)(x - 1));\n        Collections.sort(arr2);\n        Collections.reverse(arr2);\n        for(Integer x : arr2)\n            if(x >= 0 && x <= 9)\n                ans.add(numberToWord(x));\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> finalList = new ArrayList<>();\n        // iterate through arr\n        // if element is between 1 and 9 (inclusive) push element to new array\n        // sort new array in reverse order\n        // for each element of new array find its equivalent string\n        // return new array\n        // return finalList\n        for(Long x : arr){\n            if(x >= 1 && x <= 9){\n                finalList.add(x.toString());\n            }\n        }\n        finalList.sort(Collections.reverseOrder());\n        for(int i = 0; i < finalList.size(); i++){\n            switch(finalList.get(i)){\n                case \"1\" :\n                    finalList.set(i, \"One\");\n                    break;\n                case \"2\" :\n                    finalList.set(i, \"Two\");\n                    break;\n                case \"3\" :\n                    finalList.set(i, \"Three\");\n                    break;\n                case \"4\" :\n                    finalList.set(i, \"Four\");\n                    break;\n                case \"5\" :\n                    finalList.set(i, \"Five\");\n                    break;\n                case \"6\" :\n                    finalList.set(i, \"Six\");\n                    break;\n                case \"7\" :\n                    finalList.set(i, \"Seven\");\n                    break;\n                case \"8\" :\n                    finalList.set(i, \"Eight\");\n                    break;\n                case \"9\" :\n                    finalList.set(i, \"Nine\");\n                    break;\n            }\n        }\n        return finalList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (Long num : arr) {\n            if (num > 0 && num < 10)\n                result.add(Character.toString(num.toString().charAt(0)).toUpperCase() + num.toString().substring(1));\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> string = new ArrayList<String>();\n        int index = 1;\n        int length = arr.size();\n        while (index <= length) {\n            for (int i = 0; i < length; i++) {\n                if (arr.get(i) == index) {\n                    string.add(\"\" + index);\n                    arr.remove(i);\n                    length = arr.size();\n                    break;\n                }\n                if (arr.get(i) > 9) {\n                    string.add(\"\" + index);\n                }\n            }\n            index++;\n        }\n        Collections.reverse(string);\n        return string;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        String[] numbers = {\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for(Long n : arr){\n            if(n > 0 && n < 10){\n                result.add(numbers[n.intValue()]);\n            }\n        }\n        result.addAll(result.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList()));\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<>();\n        if (arr.isEmpty()) return ret;\n        for (Long i : arr)\n            if (1 <= i && i <= 9) ret.add(Integer.toString(i).replaceAll(\"[1-9]\", \"One Two Three Four Five Six Seven Eight Nine\".split(\" \")[Integer.parseInt(Integer.toString(i)) - 1]));\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        String[] names = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                res.add(names[arr.get(i) - 1]);\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> r = new ArrayList<String>();\n        for (Long x : arr) {\n            if (x >= 1 && x <= 9)\n                r.add(Long.toString(x));\n        }\n        Collections.reverse(r);\n        for (int i = 0; i < r.size(); i++) {\n            switch (r.get(i)) {\n                case \"1\":\n                    r.set(i, \"One\");\n                    break;\n                case \"2\":\n                    r.set(i, \"Two\");\n                    break;\n                case \"3\":\n                    r.set(i, \"Three\");\n                    break;\n                case \"4\":\n                    r.set(i, \"Four\");\n                    break;\n                case \"5\":\n                    r.set(i, \"Five\");\n                    break;\n                case \"6\":\n                    r.set(i, \"Six\");\n                    break;\n                case \"7\":\n                    r.set(i, \"Seven\");\n                    break;\n                case \"8\":\n                    r.set(i, \"Eight\");\n                    break;\n                case \"9\":\n                    r.set(i, \"Nine\");\n                    break;\n            }\n        }\n        return r;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        int[] a = {1, 2, 3, 4, 5, 6, 7, 8, 9};\n        for (long i: arr){\n            if (Arrays.binarySearch(a, i) >= 0){\n                result.add(String.valueOf(i));\n            }\n        }\n        Collections.reverse(result);\n        int size = result.size();\n        for (int i = 0; i < size; i++){\n            result.set(i, result.get(i).replaceAll(\".\", result.get(i).charAt(0)));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (Long i : arr) {\n            if (i < 1 || i > 9) continue;\n            result.add(switch (i) {\n                case 1 -> \"One\";\n                case 2 -> \"Two\";\n                case 3 -> \"Three\";\n                case 4 -> \"Four\";\n                case 5 -> \"Five\";\n                case 6 -> \"Six\";\n                case 7 -> \"Seven\";\n                case 8 -> \"Eight\";\n                case 9 -> \"Nine\";\n                default -> \"\";\n            });\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        if (arr.isEmpty()) return ret;\n        ArrayList<String> nums = new ArrayList<String>(Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"));\n        List<Long> str = arr.stream().filter(x -> x >= 1 && x <= 9).sorted().collect(Collectors.toList());\n        for (Long i : str) {\n            ret.add(nums.get(i - 1));\n        }\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<String>(Stream.of(arr).filter(n -> n > 0 && n < 10).distinct().sorted(Collections.reverseOrder()).map(n -> String.valueOf(n)).map(s -> {\n            switch (s) {\n                case \"1\":\n                    return \"One\";\n                case \"2\":\n                    return \"Two\";\n                case \"3\":\n                    return \"Three\";\n                case \"4\":\n                    return \"Four\";\n                case \"5\":\n                    return \"Five\";\n                case \"6\":\n                    return \"Six\";\n                case \"7\":\n                    return \"Seven\";\n                case \"8\":\n                    return \"Eight\";\n                case \"9\":\n                    return \"Nine\";\n                default:\n                    return null;\n            }\n        }).collect(Collectors.toList()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        for (Long l : arr) {\n            if (l >= 1 && l <= 9) {\n                ret.add(l.toString().substring(0, 1) + \" \" + l.toString().substring(1, 2));\n            }\n        }\n        ret.sort(Collections.reverseOrder());\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return Stream.of(arr)\n                .filter(num -> num >= 1 && num <= 9)\n                .map(num -> String.valueOf(num))\n                .map(num -> new StringBuffer(num).reverse().toString())\n                .map(num -> switch (num) {\n                    case \"1\" -> \"One\";\n                    case \"2\" -> \"Two\";\n                    case \"3\" -> \"Three\";\n                    case \"4\" -> \"Four\";\n                    case \"5\" -> \"Five\";\n                    case \"6\" -> \"Six\";\n                    case \"7\" -> \"Seven\";\n                    case \"8\" -> \"Eight\";\n                    case \"9\" -> \"Nine\";\n                })\n                .collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Long> numbers = new ArrayList<Long>();\n        for(long l : arr) {\n            if(l > 0 && l < 10) {\n                numbers.add(l);\n            }\n        }\n        Collections.reverse(numbers);\n        for(long n : numbers) {\n            result.add(getNumberName(n));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> temp = new ArrayList<Long>();\n        ArrayList<String> res = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= 9 && arr.get(i) >= 1) {\n                temp.add(arr.get(i));\n            }\n        }\n        Collections.reverse(temp);\n        for (int i = 0; i < temp.size(); i++) {\n            if (temp.get(i) == 1) {\n                res.add(\"One\");\n            } else if (temp.get(i) == 2) {\n                res.add(\"Two\");\n            } else if (temp.get(i) == 3) {\n                res.add(\"Three\");\n            } else if (temp.get(i) == 4) {\n                res.add(\"Four\");\n            } else if (temp.get(i) == 5) {\n                res.add(\"Five\");\n            } else if (temp.get(i) == 6) {\n                res.add(\"Six\");\n            } else if (temp.get(i) == 7) {\n                res.add(\"Seven\");\n            } else if (temp.get(i) == 8) {\n                res.add(\"Eight\");\n            } else if (temp.get(i) == 9) {\n                res.add(\"Nine\");\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        if (arr.isEmpty()) return result;\n        ArrayList<Long> temp = new ArrayList<>();\n        arr.stream().filter(n -> n >= 1 && n <= 9).forEach(temp::add);\n        temp = new ArrayList<>(temp.stream().sorted().collect(Collectors.toList()));\n        Collections.reverse(temp);\n        for (Long n : temp) result.add(n.toString().replaceAll(\"1\", \"One\").replaceAll(\"2\", \"Two\").replaceAll(\"3\", \"Three\").replaceAll(\"4\", \"Four\").replaceAll(\"5\", \"Five\").replaceAll(\"6\", \"Six\").replaceAll(\"7\", \"Seven\").replaceAll(\"8\", \"Eight\").replaceAll(\"9\", \"Nine\"));\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        if(arr.size()==0) return ans;\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for(int i=0;i<arr.size();i++){\n            if(arr.get(i)>0 && arr.get(i)<10){\n                temp.add(arr.get(i));\n            }\n        }\n        Collections.sort(temp);\n        for(int i=temp.size()-1;i>=0;i--){\n            switch(temp.get(i).intValue()){\n                case 1: ans.add(\"One\"); break;\n                case 2: ans.add(\"Two\"); break;\n                case 3: ans.add(\"Three\"); break;\n                case 4: ans.add(\"Four\"); break;\n                case 5: ans.add(\"Five\"); break;\n                case 6: ans.add(\"Six\"); break;\n                case 7: ans.add(\"Seven\"); break;\n                case 8: ans.add(\"Eight\"); break;\n                case 9: ans.add(\"Nine\"); break;\n            }\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(long i : arr) {\n            if(i >= 1 && i <= 9) {\n                result.add(i.toString().replaceAll(\"1\", \"One\").replaceAll(\"2\", \"Two\").replaceAll(\"3\", \"Three\").replaceAll(\"4\", \"Four\").replaceAll(\"5\", \"Five\").replaceAll(\"6\", \"Six\").replaceAll(\"7\", \"Seven\").replaceAll(\"8\", \"Eight\").replaceAll(\"9\", \"Nine\"));\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        String[] dict = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for (Long i : arr) {\n            if (i >= 1 && i <= 9) res.add(dict[i - 1]);\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> nums = new ArrayList<>();\n        for(Long n : arr) {\n            if(n > 0 && n < 10) {\n                nums.add(n);\n            }\n        }\n        Collections.reverse(nums);\n        ArrayList<String> ans = new ArrayList<>();\n        for(Long n : nums) {\n            switch(n) {\n                case 1:\n                    ans.add(\"One\");\n                    break;\n                case 2:\n                    ans.add(\"Two\");\n                    break;\n                case 3:\n                    ans.add(\"Three\");\n                    break;\n                case 4:\n                    ans.add(\"Four\");\n                    break;\n                case 5:\n                    ans.add(\"Five\");\n                    break;\n                case 6:\n                    ans.add(\"Six\");\n                    break;\n                case 7:\n                    ans.add(\"Seven\");\n                    break;\n                case 8:\n                    ans.add(\"Eight\");\n                    break;\n                case 9:\n                    ans.add(\"Nine\");\n                    break;\n            }\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> intArr = new ArrayList<Integer>();\n        for (Long l : arr) {\n            int i = (int) l;\n            if (i > 0 && i < 10)\n                intArr.add(i);\n        }\n        ArrayList<String> nameArr = new ArrayList<String>();\n        Collections.reverse(intArr);\n        for (Integer i : intArr) {\n            String name = null;\n            switch (i) {\n                case 1:\n                    name = \"One\";\n                    break;\n                case 2:\n                    name = \"Two\";\n                    break;\n                case 3:\n                    name = \"Three\";\n                    break;\n                case 4:\n                    name = \"Four\";\n                    break;\n                case 5:\n                    name = \"Five\";\n                    break;\n                case 6:\n                    name = \"Six\";\n                    break;\n                case 7:\n                    name = \"Seven\";\n                    break;\n                case 8:\n                    name = \"Eight\";\n                    break;\n                case 9:\n                    name = \"Nine\";\n                    break;\n                default:\n                    break;\n            }\n            nameArr.add(name);\n        }\n        return nameArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newArr = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                newArr.add(String.valueOf(arr.get(i)));\n            }\n        }\n        newArr.addAll(newArr.stream().sorted().collect(Collectors.toList()));\n        Collections.reverse(newArr);\n        for (int i = 0; i < newArr.size(); i++) {\n            if (newArr.get(i).equals(\"1\")) {\n                newArr.set(i, \"One\");\n            } else if (newArr.get(i).equals(\"2\")) {\n                newArr.set(i, \"Two\");\n            } else if (newArr.get(i).equals(\"3\")) {\n                newArr.set(i, \"Three\");\n            } else if (newArr.get(i).equals(\"4\")) {\n                newArr.set(i, \"Four\");\n            } else if (newArr.get(i).equals(\"5\")) {\n                newArr.set(i, \"Five\");\n            } else if (newArr.get(i).equals(\"6\")) {\n                newArr.set(i, \"Six\");\n            } else if (newArr.get(i).equals(\"7\")) {\n                newArr.set(i, \"Seven\");\n            } else if (newArr.get(i).equals(\"8\")) {\n                newArr.set(i, \"Eight\");\n            } else if (newArr.get(i).equals(\"9\")) {\n                newArr.set(i, \"Nine\");\n            }\n        }\n        return newArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> strings = new ArrayList<String>();\n        for (Long num: arr) {\n            if (num > 0 && num <= 9) {\n                strings.add(Integer.toString(num.intValue()).replace(\"1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\"));\n            }\n        }\n        return strings.stream().collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Your code here\n        ArrayList<Long> numList = new ArrayList<Long>();\n        ArrayList<String> strList = new ArrayList<String>();\n        for(Long x:arr){\n            if(x>0 && x<10){\n                numList.add(x);\n            }\n        }\n        for(int i=numList.size()-1;i>=0;i--){\n            strList.add(returnName(numList.get(i)));\n        }\n        return strList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return null;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        if(arr.isEmpty()) return res;\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                res.add(\"One\".charAt(0) + \"\");\n                res.add(\"Two\".charAt(0) + \"\");\n                res.add(\"Three\".charAt(0) + \"\");\n                res.add(\"Four\".charAt(0) + \"\");\n                res.add(\"Five\".charAt(0) + \"\");\n                res.add(\"Six\".charAt(0) + \"\");\n                res.add(\"Seven\".charAt(0) + \"\");\n                res.add(\"Eight\".charAt(0) + \"\");\n                res.add(\"Nine\".charAt(0) + \"\");\n                res.set(res.size() - arr.get(i) - 1, res.get(res.size() - 1));\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // write your code here\n        return new ArrayList<>(Arrays.asList(arr.stream().filter(x -> x >= 1 && x <= 9).sorted().mapToObj(x -> Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\").get(x.intValue() - 1)).collect(Collectors.toList())));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        for (long l : arr) {\n            if (l >= 1 && l <= 9) {\n                ret.add(l == 1 ? \"One\" : l == 2 ? \"Two\" : l == 3 ? \"Three\" : l == 4 ? \"Four\" : l == 5 ? \"Five\" : l == 6 ? \"Six\" : l == 7 ? \"Seven\" : l == 8 ? \"Eight\" : \"Nine\");\n            }\n        }\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            Long number = arr.get(i);\n            if (number >= 1 && number <= 9) {\n                switch (number.intValue()) {\n                    case 1:\n                        result.add(\"One\");\n                        break;\n                    case 2:\n                        result.add(\"Two\");\n                        break;\n                    case 3:\n                        result.add(\"Three\");\n                        break;\n                    case 4:\n                        result.add(\"Four\");\n                        break;\n                    case 5:\n                        result.add(\"Five\");\n                        break;\n                    case 6:\n                        result.add(\"Six\");\n                        break;\n                    case 7:\n                        result.add(\"Seven\");\n                        break;\n                    case 8:\n                        result.add(\"Eight\");\n                        break;\n                    case 9:\n                        result.add(\"Nine\");\n                        break;\n                }\n            }\n        }\n        result.addAll(0, result);\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> r=new ArrayList<String>();\n        if(arr.size()==0){\n            return r;\n        }\n        ArrayList<Long> temp=new ArrayList<>();\n        for(int i=0;i<arr.size();i++){\n            if(arr.get(i)>0&&arr.get(i)<=9){\n                temp.add(arr.get(i));\n            }\n        }\n        Collections.reverse(temp);\n        for(int i=0;i<temp.size();i++){\n            String[] ss= {\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n            r.add(ss[(int)temp.get(i)]);\n        }\n        return r;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<String> nums = new ArrayList<String>();\n        nums.add(\"One\");\n        nums.add(\"Two\");\n        nums.add(\"Three\");\n        nums.add(\"Four\");\n        nums.add(\"Five\");\n        nums.add(\"Six\");\n        nums.add(\"Seven\");\n        nums.add(\"Eight\");\n        nums.add(\"Nine\");\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                res.add(nums.get((int)arr.get(i) - 1));\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> subArr = new ArrayList<>();\n        String[] numbers = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for (long num : arr) {\n            if (num >= 1 && num <= 9) {\n                subArr.add((int) num);\n            }\n        }\n        Collections.reverse(subArr);\n        ArrayList<String> result = new ArrayList<>();\n        for (int i : subArr) {\n            result.add(numbers[i - 1]);\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        if (arr.size() == 0) {\n            return res;\n        }\n        int index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 1 && arr.get(i) < 10) {\n                index = i;\n                break;\n            }\n        }\n        if (index != 0) {\n            arr.remove(index);\n            Collections.reverse(arr);\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == 1) {\n                res.add(\"One\");\n            } else if (arr.get(i) == 2) {\n                res.add(\"Two\");\n            } else if (arr.get(i) == 3) {\n                res.add(\"Three\");\n            } else if (arr.get(i) == 4) {\n                res.add(\"Four\");\n            } else if (arr.get(i) == 5) {\n                res.add(\"Five\");\n            } else if (arr.get(i) == 6) {\n                res.add(\"Six\");\n            } else if (arr.get(i) == 7) {\n                res.add(\"Seven\");\n            } else if (arr.get(i) == 8) {\n                res.add(\"Eight\");\n            } else if (arr.get(i) == 9) {\n                res.add(\"Nine\");\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        for (long i : arr) {\n            if (i >= 1 && i <= 9) {\n                ans.add(switcher(i));\n            }\n        }\n        Collections.reverse(ans);\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> a = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                a.add(i, (new Integer(arr.get(i) - 1).toString()));\n            }\n        }\n        Collections.reverse(a);\n        String[] num = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> str = new ArrayList<>();\n        for(int i = 0; i < a.size(); i++) {\n            str.add(i, num[Integer.parseInt(a.get(i))]);\n        }\n        return str;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return arr.stream().filter(x -> x >= 1 && x <= 9).sorted(Collections.reverseOrder()).map(x -> {\n            String[] names = { \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\" };\n            return names[x - 1];\n        }).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> str = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++)\n            if (arr.get(i) > 0 && arr.get(i) < 10)\n                str.add(i, String.valueOf(arr.get(i)));\n        str = reverse(str);\n        String[] num = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for (int i = 0; i < str.size(); i++)\n            str.set(i, num[Integer.parseInt(str.get(i)) - 1]);\n        return str;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> out = new ArrayList<String>();\n        for(int i=0; i<arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) out.add(Integer.toString(arr.get(i).intValue()));\n        }\n        Collections.reverse(out);\n        for(int i=0; i<out.size(); i++){\n            out.set(i,out.get(i).charAt(0)+\"\");\n        }\n        for(int i=0; i<out.size(); i++){\n            switch(out.get(i)){\n                case \"1\": out.set(i,\"One\");\n                    break;\n                case \"2\": out.set(i,\"Two\");\n                    break;\n                case \"3\": out.set(i,\"Three\");\n                    break;\n                case \"4\": out.set(i,\"Four\");\n                    break;\n                case \"5\": out.set(i,\"Five\");\n                    break;\n                case \"6\": out.set(i,\"Six\");\n                    break;\n                case \"7\": out.set(i,\"Seven\");\n                    break;\n                case \"8\": out.set(i,\"Eight\");\n                    break;\n                case \"9\": out.set(i,\"Nine\");\n                    break;\n                default: out.remove(i);\n                    break;\n            }\n        }\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                ans.add(i, String.valueOf(arr.get(i)));\n            }\n        }\n        Collections.reverse(ans);\n        for (int i = 0; i < ans.size(); i++) {\n            int n = Integer.parseInt(ans.get(i));\n            String str = \"\";\n            switch (n) {\n            case 1:\n                str = \"One\";\n                break;\n            case 2:\n                str = \"Two\";\n                break;\n            case 3:\n                str = \"Three\";\n                break;\n            case 4:\n                str = \"Four\";\n                break;\n            case 5:\n                str = \"Five\";\n                break;\n            case 6:\n                str = \"Six\";\n                break;\n            case 7:\n                str = \"Seven\";\n                break;\n            case 8:\n                str = \"Eight\";\n                break;\n            case 9:\n                str = \"Nine\";\n                break;\n            }\n            ans.set(i, str);\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> output = new ArrayList<>();\n        ArrayList<Integer> oddNumbers = new ArrayList<>();\n        for (Long n: arr) {\n            if (n >= 1 && n <= 9) {\n                output.add(n.intValue() + \"\");\n            } else if (n % 2 != 0) {\n                oddNumbers.add(n.intValue());\n            }\n        }\n        Collections.sort(oddNumbers);\n        Collections.reverse(oddNumbers);\n        for (Integer n: oddNumbers) {\n            output.add(n + \"\");\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for(long a : arr)\n        {\n            if(a > 0 && a < 10)\n            {\n                String s = \"\";\n                switch(a)\n                {\n                    case 1: s = \"One\";break;\n                    case 2: s = \"Two\";break;\n                    case 3: s = \"Three\";break;\n                    case 4: s = \"Four\";break;\n                    case 5: s = \"Five\";break;\n                    case 6: s = \"Six\";break;\n                    case 7: s = \"Seven\";break;\n                    case 8: s = \"Eight\";break;\n                    case 9: s = \"Nine\";break;\n                }\n                res.add(s);\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> arr2 = new ArrayList<String>();\n        String[] str = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for(long n : arr) {\n            if(n <= 9 && n >= 1) {\n                arr2.add(str[(int)(n - 1)]);\n            }\n        }\n        Collections.reverse(arr2);\n        return arr2;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> list = new ArrayList<String>();\n        ArrayList<String> a = new ArrayList<String>();\n        ArrayList<Long> b = new ArrayList<Long>();\n        for(int i = 0; i<arr.size();i++){\n            if(arr.get(i)<=9 && arr.get(i)>=1){\n                list.add(arr.get(i)+\"\");\n                b.add(arr.get(i));\n            }\n        }\n        Collections.reverse(list);\n        for(int i = 0; i<list.size();i++){\n            a.add(String.valueOf(list.get(i)));\n        }\n        return a;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (long i: arr) {\n            if (i >= 1 && i <= 9) {\n                result.add(String.valueOf(i));\n            }\n        }\n        result.reverse();\n        for (int i = 0; i < result.size(); i++) {\n            switch (result.get(i)) {\n                case \"1\":\n                    result.set(i, \"One\");\n                    break;\n                case \"2\":\n                    result.set(i, \"Two\");\n                    break;\n                case \"3\":\n                    result.set(i, \"Three\");\n                    break;\n                case \"4\":\n                    result.set(i, \"Four\");\n                    break;\n                case \"5\":\n                    result.set(i, \"Five\");\n                    break;\n                case \"6\":\n                    result.set(i, \"Six\");\n                    break;\n                case \"7\":\n                    result.set(i, \"Seven\");\n                    break;\n                case \"8\":\n                    result.set(i, \"Eight\");\n                    break;\n                case \"9\":\n                    result.set(i, \"Nine\");\n                    break;\n                default:\n                    result.remove(i);\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> answer = new ArrayList<String>();\n        for(long i: arr) {\n            if(i <= 9 && i >= 1) {\n                answer.add(switcher(i));\n            }\n        }\n        Collections.reverse(answer);\n        return answer;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> r = new ArrayList<String>();\n        for (Long e : arr) {\n            try {\n                r.add(Integer.toString(e.intValue()).toLowerCase().replace(\"1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\"));\n            } catch (Exception e1) {}\n        }\n        Collections.reverse(r);\n        return r;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> str = new ArrayList<>();\n        ArrayList<String> strings = new ArrayList<>(Arrays.asList(\"Zero\",\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\"));\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                str.add(arr.get(i).intValue());\n            }\n        }\n        Collections.reverse(str);\n        str.forEach(element -> {\n            System.out.println(strings.get(element - 1));\n        });\n        return str.stream().map(element -> strings.get(element - 1)).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Your code here\n        ArrayList<String> ans = new ArrayList<String>();\n        ArrayList<Integer> arr1 = new ArrayList<Integer>();\n        for(long x : arr){\n            if(x > 0 && x < 10){\n                arr1.add((int) x);\n            }\n        }\n        Collections.reverse(arr1);\n        for(int x : arr1){\n            ans.add(String.valueOf(x));\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] digits = { \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\" };\n        ArrayList<String> out = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < 1 || arr.get(i) > 9) {\n                out.add(digits[0]);\n            } else {\n                out.add(digits[arr.get(i) - 1]);\n            }\n        }\n        Collections.reverse(out);\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        arr.stream().filter(i -> i > 0 && i < 10).forEach(i -> res.add(switch (i) {\n            case 1 -> \"One\";\n            case 2 -> \"Two\";\n            case 3 -> \"Three\";\n            case 4 -> \"Four\";\n            case 5 -> \"Five\";\n            case 6 -> \"Six\";\n            case 7 -> \"Seven\";\n            case 8 -> \"Eight\";\n            case 9 -> \"Nine\";\n        }));\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<String>();", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> digits = new ArrayList<Long>();\n        ArrayList<String> words = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) > 0 && arr.get(i) < 10){\n                digits.add(arr.get(i));\n            }\n        }\n        Collections.reverse(digits);\n        for(int i = 0; i < digits.size(); i++){\n            if(digits.get(i) == 1)\n                words.add(\"One\");\n            else if(digits.get(i) == 2)\n                words.add(\"Two\");\n            else if(digits.get(i) == 3)\n                words.add(\"Three\");\n            else if(digits.get(i) == 4)\n                words.add(\"Four\");\n            else if(digits.get(i) == 5)\n                words.add(\"Five\");\n            else if(digits.get(i) == 6)\n                words.add(\"Six\");\n            else if(digits.get(i) == 7)\n                words.add(\"Seven\");\n            else if(digits.get(i) == 8)\n                words.add(\"Eight\");\n            else if(digits.get(i) == 9)\n                words.add(\"Nine\");\n        }\n        return words;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> a = new ArrayList<>();\n        for(long i:arr) {\n            if(i>=1 && i<=9) {\n                a.add(\"One\");\n                a.add(\"Two\");\n                a.add(\"Three\");\n                a.add(\"Four\");\n                a.add(\"Five\");\n                a.add(\"Six\");\n                a.add(\"Seven\");\n                a.add(\"Eight\");\n                a.add(\"Nine\");\n            }\n        }\n        a.removeAll(Collections.singleton(null));\n        Collections.reverse(a);\n        return a;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> betweenOneAndNine = new ArrayList<>();\n        for (long item: arr) {\n            if (item >= 1 && item <= 9) {\n                betweenOneAndNine.add(item);\n            }\n        }\n        Collections.reverse(betweenOneAndNine);\n        ArrayList<String> result = new ArrayList<>();\n        for (long item: betweenOneAndNine) {\n            result.add(item + \"\");\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++){\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) temp.add(arr.get(i));\n        }\n        ArrayList<Long> temp2 = new ArrayList<Long>();\n        for (int i = temp.size() - 1; i >= 0; i--){\n            temp2.add(temp.get(i));\n        }\n        for (int i = 0; i < temp2.size(); i++){\n            switch(temp2.get(i).intValue()){\n                case 1: res.add(\"One\");\n                        break;\n                case 2: res.add(\"Two\");\n                        break;\n                case 3: res.add(\"Three\");\n                        break;\n                case 4: res.add(\"Four\");\n                        break;\n                case 5: res.add(\"Five\");\n                        break;\n                case 6: res.add(\"Six\");\n                        break;\n                case 7: res.add(\"Seven\");\n                        break;\n                case 8: res.add(\"Eight\");\n                        break;\n                case 9: res.add(\"Nine\");\n                        break;\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> names = new ArrayList<String>();\n        ArrayList<Integer> between1to9 = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) < 10 && arr.get(i) > 0){\n                between1to9.add((int)arr.get(i));\n            }\n        }\n        Collections.reverse(between1to9);\n        for(int i = 0; i < between1to9.size(); i++){\n            if(between1to9.get(i) == 1){\n                names.add(\"One\");\n            }else if(between1to9.get(i) == 2){\n                names.add(\"Two\");\n            }else if(between1to9.get(i) == 3){\n                names.add(\"Three\");\n            }else if(between1to9.get(i) == 4){\n                names.add(\"Four\");\n            }else if(between1to9.get(i) == 5){\n                names.add(\"Five\");\n            }else if(between1to9.get(i) == 6){\n                names.add(\"Six\");\n            }else if(between1to9.get(i) == 7){\n                names.add(\"Seven\");\n            }else if(between1to9.get(i) == 8){\n                names.add(\"Eight\");\n            }else if(between1to9.get(i) == 9){\n                names.add(\"Nine\");\n            }\n        }\n        return names;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newArr = new ArrayList<>();\n        ArrayList<String> map = new ArrayList<>(Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"));\n        int i = 0;\n        while (i < arr.size()) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9)\n                newArr.add(map.get(arr.get(i) - 1));\n            i++;\n        }\n        newArr = (ArrayList<String>) newArr.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());\n        return newArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (long i : arr) {\n            if (i <= 9 && i >= 1) {\n                result.add(Character.toString(i + 0x30).toUpperCase(Locale.ROOT));\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> list = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) < 10 && arr.get(i) >= 1) {\n                list.add(arr.get(i));\n            }\n        }\n        Collections.reverse(list);\n        ArrayList<String> ans = new ArrayList<>();\n        for(int i = 0; i < list.size(); i++) {\n            ans.add(Long.toString(list.get(i)));\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> list = new ArrayList<String>();\n        int length = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if((arr.get(i) >= 1) && (arr.get(i) <= 9))\n                length++;\n        }\n        if(length == 0)\n            return list;\n        int[] ar = new int[length];\n        int j = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if((arr.get(i) >= 1) && (arr.get(i) <= 9))\n                ar[j++] = (int)arr.get(i);\n        }\n        for(int i = 0; i < j; i++) {\n            if(ar[i] == 1)\n                list.add(\"One\");\n            if(ar[i] == 2)\n                list.add(\"Two\");\n            if(ar[i] == 3)\n                list.add(\"Three\");\n            if(ar[i] == 4)\n                list.add(\"Four\");\n            if(ar[i] == 5)\n                list.add(\"Five\");\n            if(ar[i] == 6)\n                list.add(\"Six\");\n            if(ar[i] == 7)\n                list.add(\"Seven\");\n            if(ar[i] == 8)\n                list.add(\"Eight\");\n            if(ar[i] == 9)\n                list.add(\"Nine\");\n        }\n        Collections.reverse(list);\n        return list;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for (long num : arr) {\n            if (num > 0 && num < 10) {\n                res.add(String.valueOf(num));\n            }\n        }\n        res.sort(Collections.reverseOrder());\n        for (int i = 0; i < res.size(); i++) {\n            res.set(i, res.get(i).replace(\"1\", \"One\"));\n            res.set(i, res.get(i).replace(\"2\", \"Two\"));\n            res.set(i, res.get(i).replace(\"3\", \"Three\"));\n            res.set(i, res.get(i).replace(\"4\", \"Four\"));\n            res.set(i, res.get(i).replace(\"5\", \"Five\"));\n            res.set(i, res.get(i).replace(\"6\", \"Six\"));\n            res.set(i, res.get(i).replace(\"7\", \"Seven\"));\n            res.set(i, res.get(i).replace(\"8\", \"Eight\"));\n            res.set(i, res.get(i).replace(\"9\", \"Nine\"));\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> intArr = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                intArr.add(arr.get(i).intValue());\n            }\n        }\n        ArrayList<String> res = new ArrayList<String>();\n        Collections.sort(intArr);\n        Collections.reverse(intArr);\n        for (int i = 0; i < intArr.size(); i++) {\n            switch (intArr.get(i)) {\n                case 1:\n                    res.add(\"One\");\n                    break;\n                case 2:\n                    res.add(\"Two\");\n                    break;\n                case 3:\n                    res.add(\"Three\");\n                    break;\n                case 4:\n                    res.add(\"Four\");\n                    break;\n                case 5:\n                    res.add(\"Five\");\n                    break;\n                case 6:\n                    res.add(\"Six\");\n                    break;\n                case 7:\n                    res.add(\"Seven\");\n                    break;\n                case 8:\n                    res.add(\"Eight\");\n                    break;\n                case 9:\n                    res.add(\"Nine\");\n                    break;\n                default:\n                    continue;\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        for (long number : arr) {\n            if (number >= 1 && number <= 9) {\n                result.add(findNumber(number));\n            }\n        }\n        result.sort(Comparator.reverseOrder());\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        for (int i : arr) {\n            if (i <= 9 && i >= 1) {\n                result.add(switch (i) {\n                    case 1 -> \"One\";\n                    case 2 -> \"Two\";\n                    case 3 -> \"Three\";\n                    case 4 -> \"Four\";\n                    case 5 -> \"Five\";\n                    case 6 -> \"Six\";\n                    case 7 -> \"Seven\";\n                    case 8 -> \"Eight\";\n                    case 9 -> \"Nine\";\n                    default -> null;\n                });\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Integer> numList = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                numList.add(arr.get(i).intValue());\n            }\n        }\n        ArrayList<String> finalList = new ArrayList<String>();\n        for (int i = numList.size() - 1; i >= 0; i--) {\n            switch (numList.get(i)) {\n                case 9:\n                    finalList.add(\"Nine\");\n                    break;\n                case 8:\n                    finalList.add(\"Eight\");\n                    break;\n                case 7:\n                    finalList.add(\"Seven\");\n                    break;\n                case 6:\n                    finalList.add(\"Six\");\n                    break;\n                case 5:\n                    finalList.add(\"Five\");\n                    break;\n                case 4:\n                    finalList.add(\"Four\");\n                    break;\n                case 3:\n                    finalList.add(\"Three\");\n                    break;\n                case 2:\n                    finalList.add(\"Two\");\n                    break;\n                case 1:\n                    finalList.add(\"One\");\n                    break;\n            }\n        }\n        return finalList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.size() == 0) return new ArrayList<String>();\n        ArrayList<Integer> tmp = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) tmp.add((int)arr.get(i));\n        }\n        Collections.reverse(tmp);\n        ArrayList<String> ret = new ArrayList<String>();\n        for (int i = 0; i < tmp.size(); i++) {\n            ret.add(tmp.get(i).toString());\n        }\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++){\n            int temp = (int)arr.get(i);\n            if(temp <= 9 && temp >= 1){\n                result.add(new String[]{\"One\",\"Two\",\"Three\",\"Four\",\"Five\",\"Six\",\"Seven\",\"Eight\",\"Nine\"}[temp - 1]);\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> out = new ArrayList<String>();\n        ArrayList<Integer> toSort = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                toSort.add(arr.get(i).intValue());\n            }\n        }\n        Collections.sort(toSort);\n        Collections.reverse(toSort);\n        for (int i = 0; i < toSort.size(); i++) {\n            out.add(List.valueAt(String.class, i + 1).apply(toSort.get(i)));\n        }\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<>();\n        if (arr.size() == 0) {\n            return res;\n        }\n        arr.removeIf(n -> n < 1 || n > 9);\n        Collections.reverse(arr);\n        for (Long n : arr) {\n            res.add(getDigit(n));\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> words = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                switch(arr.get(i).intValue()) {\n                    case 1:\n                        words.add(\"One\");\n                        break;\n                    case 2:\n                        words.add(\"Two\");\n                        break;\n                    case 3:\n                        words.add(\"Three\");\n                        break;\n                    case 4:\n                        words.add(\"Four\");\n                        break;\n                    case 5:\n                        words.add(\"Five\");\n                        break;\n                    case 6:\n                        words.add(\"Six\");\n                        break;\n                    case 7:\n                        words.add(\"Seven\");\n                        break;\n                    case 8:\n                        words.add(\"Eight\");\n                        break;\n                    case 9:\n                        words.add(\"Nine\");\n                        break;\n                }\n            }\n        }\n        Collections.reverse(words);\n        return words;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        for (long n : arr) {\n            if (1 <= n && n <= 9) result.add(n + \"\");\n        }\n        Collections.reverse(result);\n        return result.stream().map(n -> {\n            switch (n) {\n                case \"1\": return \"One\";\n                case \"2\": return \"Two\";\n                case \"3\": return \"Three\";\n                case \"4\": return \"Four\";\n                case \"5\": return \"Five\";\n                case \"6\": return \"Six\";\n                case \"7\": return \"Seven\";\n                case \"8\": return \"Eight\";\n                case \"9\": return \"Nine\";\n                default: return n;\n            }\n        }).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> out = new ArrayList<String>();\n        ArrayList<Integer> nums = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                nums.add(arr.get(i).intValue());\n            }\n        }\n        Collections.reverse(nums);\n        for (int i = 0; i < nums.size(); i++) {\n            switch (nums.get(i)) {\n                case 1:\n                    out.add(\"One\");\n                    break;\n                case 2:\n                    out.add(\"Two\");\n                    break;\n                case 3:\n                    out.add(\"Three\");\n                    break;\n                case 4:\n                    out.add(\"Four\");\n                    break;\n                case 5:\n                    out.add(\"Five\");\n                    break;\n                case 6:\n                    out.add(\"Six\");\n                    break;\n                case 7:\n                    out.add(\"Seven\");\n                    break;\n                case 8:\n                    out.add(\"Eight\");\n                    break;\n                case 9:\n                    out.add(\"Nine\");\n                    break;\n            }\n        }\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Long> num = arr.stream().filter(x -> (x >= 1 && x <= 9)).collect(Collectors.toList());\n        Collections.reverse(num);\n        ArrayList<String> ans = new ArrayList<>();\n        for (int i = 0; i < num.size(); i++) {\n            switch (num.get(i).intValue()) {\n                case 1:\n                    ans.add(\"One\");\n                    break;\n                case 2:\n                    ans.add(\"Two\");\n                    break;\n                case 3:\n                    ans.add(\"Three\");\n                    break;\n                case 4:\n                    ans.add(\"Four\");\n                    break;\n                case 5:\n                    ans.add(\"Five\");\n                    break;\n                case 6:\n                    ans.add(\"Six\");\n                    break;\n                case 7:\n                    ans.add(\"Seven\");\n                    break;\n                case 8:\n                    ans.add(\"Eight\");\n                    break;\n                case 9:\n                    ans.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> r = new ArrayList<String>();\n        for(long i: arr) {\n            if(i >= 1 && i <= 9) {\n                switch((int) i) {\n                    case 1:\n                        r.add(\"One\");\n                        break;\n                    case 2:\n                        r.add(\"Two\");\n                        break;\n                    case 3:\n                        r.add(\"Three\");\n                        break;\n                    case 4:\n                        r.add(\"Four\");\n                        break;\n                    case 5:\n                        r.add(\"Five\");\n                        break;\n                    case 6:\n                        r.add(\"Six\");\n                        break;\n                    case 7:\n                        r.add(\"Seven\");\n                        break;\n                    case 8:\n                        r.add(\"Eight\");\n                        break;\n                    case 9:\n                        r.add(\"Nine\");\n                        break;\n                }\n            }\n        }\n        return r;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> sol = new ArrayList<String>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n        String[] num = {\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        for (Long i: arr) {\n            if (i>0 && i<10) {\n                temp.add(i);\n            }\n        }\n        temp.sort(null);\n        Collections.reverse(temp);\n        for (Long i: temp) {\n            sol.add(num[(int)i-1]);\n        }\n        return sol;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<String> numbers = new ArrayList<String>();\n        numbers.add(\"One\");\n        numbers.add(\"Two\");\n        numbers.add(\"Three\");\n        numbers.add(\"Four\");\n        numbers.add(\"Five\");\n        numbers.add(\"Six\");\n        numbers.add(\"Seven\");\n        numbers.add(\"Eight\");\n        numbers.add(\"Nine\");\n        ArrayList<Long> sorted = new ArrayList<Long>(arr);\n        sorted.sort(null);\n        for (int i = 0; i < sorted.size(); i++) {\n            if ((sorted.get(i) >= 1l) && (sorted.get(i) <= 9l)) {\n                result.add(numbers.get((int) (sorted.get(i) - 1l)));\n            }\n        }\n        return new ArrayList<String>(Arrays.asList(result.toArray(new String[result.size()])));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> nums = new ArrayList<String>(Arrays.asList(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"));\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            int n = (int)arr.get(i);\n            if (n >= 1 && n <= 9) {\n                result.add(nums.get(n - 1));\n            }\n        }\n        result.addAll(result.subList(0, result.size() / 2).stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList()));\n        result.addAll(result.subList(result.size() / 2, result.size()).stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList()));\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> result = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n            int num = (int) arr.get(i);\n            if (num >= 1 && num <= 9) {\n                result.add(num);\n            }\n        }\n        Collections.reverse(result);\n        ArrayList<String> newResult = new ArrayList<>();\n        for (int num : result) {\n            switch (num) {\n                case 1:\n                    newResult.add(\"One\");\n                    break;\n                case 2:\n                    newResult.add(\"Two\");\n                    break;\n                case 3:\n                    newResult.add(\"Three\");\n                    break;\n                case 4:\n                    newResult.add(\"Four\");\n                    break;\n                case 5:\n                    newResult.add(\"Five\");\n                    break;\n                case 6:\n                    newResult.add(\"Six\");\n                    break;\n                case 7:\n                    newResult.add(\"Seven\");\n                    break;\n                case 8:\n                    newResult.add(\"Eight\");\n                    break;\n                case 9:\n                    newResult.add(\"Nine\");\n                    break;\n            }\n        }\n        return newResult;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        for(long i : arr){\n            if(i>0 && i<10){\n                ans.add(reverse(numbers[i-1]));\n            }\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<String> ans = new ArrayList<>();\n        ArrayList<Integer> nums = new ArrayList<>();\n        for(Long x : arr){\n            if(x >= 1 && x <= 9){\n                nums.add(x.intValue());\n            }\n        }\n        Collections.reverse(nums);\n        for(int x : nums){\n            ans.add(switcher(x));\n        }\n        return (ArrayList<String>) ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        if(arr.size() == 0)\n            return res;\n        TreeSet<Integer> st = new TreeSet<Integer>();\n        for(long l : arr) {\n            int x = (int)l;\n            if(x >= 1 && x <= 9) {\n                st.add(x);\n            }\n        }\n        ArrayList<Integer> arr2 = new ArrayList<Integer>(st);\n        Collections.reverse(arr2);\n        for(int i : arr2)\n            res.add(i + \"\");\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> arrStr = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                switch ((int) arr.get(i)) {\n                    case 1:\n                        arrStr.add(\"One\");\n                        break;\n                    case 2:\n                        arrStr.add(\"Two\");\n                        break;\n                    case 3:\n                        arrStr.add(\"Three\");\n                        break;\n                    case 4:\n                        arrStr.add(\"Four\");\n                        break;\n                    case 5:\n                        arrStr.add(\"Five\");\n                        break;\n                    case 6:\n                        arrStr.add(\"Six\");\n                        break;\n                    case 7:\n                        arrStr.add(\"Seven\");\n                        break;\n                    case 8:\n                        arrStr.add(\"Eight\");\n                        break;\n                    case 9:\n                        arrStr.add(\"Nine\");\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        Collections.reverse(arrStr);\n        return arrStr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newArr = new ArrayList<String>();\n        for (long num: arr) {\n            if (1 <= num && num <= 9) {\n                newArr.add(switchNumeral(num));\n            }\n        }\n        Collections.reverse(newArr);\n        return newArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> a = new ArrayList<String>();\n        if(arr.size() == 0) return a;\n        for(Long i:arr){\n            if(i >= 1 && i <= 9) a.add(num2str(i));\n        }\n        a.sort((s,s1)->s1.length()-s.length());\n        Collections.reverse(a);\n        return a;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> temp = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                temp.add(\"One\");\n                temp.add(\"Two\");\n                temp.add(\"Three\");\n                temp.add(\"Four\");\n                temp.add(\"Five\");\n                temp.add(\"Six\");\n                temp.add(\"Seven\");\n                temp.add(\"Eight\");\n                temp.add(\"Nine\");\n            }\n        }\n        Collections.reverse(temp);\n        ArrayList<String> result = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                result.add(temp.get(0));\n                temp.remove(0);\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Integer> nums = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n            int number = (int) arr.get(i);\n            if (number >= 1 && number <= 9) {\n                nums.add(number);\n            }\n        }\n        Collections.reverse(nums);\n        ArrayList<String> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            int number = nums.get(i);\n            result.add(String.valueOf(number));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // fill in\n        ArrayList<String> out = new ArrayList<String>();\n        for(Long num : arr){\n            if((num >= 1 && num <= 9) || num == 0){\n                out.add(num.toString());\n            }\n        }\n        Collections.reverse(out);\n        for(int i = 0; i < out.size(); i++){\n            switch (Integer.parseInt(out.get(i))) {\n                case 1:\n                    out.set(i, \"One\");\n                    break;\n                case 2:\n                    out.set(i, \"Two\");\n                    break;\n                case 3:\n                    out.set(i, \"Three\");\n                    break;\n                case 4:\n                    out.set(i, \"Four\");\n                    break;\n                case 5:\n                    out.set(i, \"Five\");\n                    break;\n                case 6:\n                    out.set(i, \"Six\");\n                    break;\n                case 7:\n                    out.set(i, \"Seven\");\n                    break;\n                case 8:\n                    out.set(i, \"Eight\");\n                    break;\n                case 9:\n                    out.set(i, \"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<String> digits = Arrays.asList(\n            \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\n        );\n        return arr.stream()\n            .filter(x -> x >= 1 && x <= 9)\n            .map(x -> digits.get((int)x - 1))\n            .sorted()\n            .collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.size() == 0) {\n            return new ArrayList<String>();\n        } else {\n            ArrayList<Integer> nums = new ArrayList<Integer>();\n            for (int i = 0; i < arr.size(); i++) {\n                Long temp = arr.get(i);\n                int num = (int) temp;\n                nums.add(num);\n            }\n            ArrayList<String> ans = new ArrayList<String>();\n            nums.sort(Collections.reverseOrder());\n            for (int i = 0; i < nums.size(); i++) {\n                int n = nums.get(i);\n                if (n >= 1 && n <= 9) {\n                    String s = String.valueOf(n);\n                    ans.add(\"\".concat(s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase()));\n                }\n            }\n            return ans;\n        }", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> sol = new ArrayList<String>();\n        for (long x : arr) {\n            if (x > 0 && x < 10)\n                sol.add(Long.toString(x));\n        }\n        Collections.reverse(sol);\n        for (int i = 0; i < sol.size(); i++)\n            sol.set(i, sol.get(i).replace(\"1\", \"One\").replace(\"2\", \"Two\")\n                .replace(\"3\", \"Three\").replace(\"4\", \"Four\").replace(\"5\", \"Five\")\n                .replace(\"6\", \"Six\").replace(\"7\", \"Seven\").replace(\"8\", \"Eight\")\n                .replace(\"9\", \"Nine\"));\n        return sol;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : arr) {\n            if (i > 0 && i < 10) {\n                res.add(i);\n            }\n        }\n        Collections.reverse(res);\n        ArrayList<String> finalRes = new ArrayList<String>();\n        for (Long i : res) {\n            finalRes.add(String.valueOf(i));\n        }\n        return finalRes;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n        ArrayList<String> temp1 = new ArrayList<String>();\n        int i = 0;\n        while (i < arr.size()) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                temp.add(arr.get(i));\n                i++;\n            } else {\n                i++;\n            }\n        }\n        Collections.reverse(temp);\n        while (temp.size() > 0) {\n            switch (temp.get(0).intValue()) {\n                case 1:\n                    temp1.add(\"One\");\n                    break;\n                case 2:\n                    temp1.add(\"Two\");\n                    break;\n                case 3:\n                    temp1.add(\"Three\");\n                    break;\n                case 4:\n                    temp1.add(\"Four\");\n                    break;\n                case 5:\n                    temp1.add(\"Five\");\n                    break;\n                case 6:\n                    temp1.add(\"Six\");\n                    break;\n                case 7:\n                    temp1.add(\"Seven\");\n                    break;\n                case 8:\n                    temp1.add(\"Eight\");\n                    break;\n                case 9:\n                    temp1.add(\"Nine\");\n                    break;\n            }\n            temp.remove(0);\n        }\n        return temp1;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        ArrayList<Integer> list = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                list.add((int)(arr.get(i) - 1));\n            }\n        }\n        Collections.reverse(list);\n        for(int i = 0; i < list.size(); i++) {\n            result.add(switcher(list.get(i)));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<String>(Arrays.asList(new String[] {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"}));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Your code here\n        ArrayList<String> res = new ArrayList<>();\n        if(arr.isEmpty()) return res;\n        int max = (int)Collections.max(arr);\n        int min = (int)Collections.min(arr);\n        if(max < 1 || max > 9 || min < 1 || min > 9) return res;\n        for(int i = 0; i < arr.size(); i++){\n            res.add(i, find(arr.get(i)));\n        }\n        res.sort(new Comparator<String>(){\n            @Override\n            public int compare(String a, String b) {\n                return a.length() - b.length();\n            }\n        });\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.isEmpty()) return new ArrayList<String>();\n        ArrayList<Integer> intArr = new ArrayList<Integer>();\n        ArrayList<String> strArr = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) intArr.add(arr.get(i).intValue());\n        }\n        Collections.reverse(intArr);\n        for(int i = 0; i < intArr.size(); i++){\n            switch(intArr.get(i)){\n                case 1: strArr.add(\"One\"); break;\n                case 2: strArr.add(\"Two\"); break;\n                case 3: strArr.add(\"Three\"); break;\n                case 4: strArr.add(\"Four\"); break;\n                case 5: strArr.add(\"Five\"); break;\n                case 6: strArr.add(\"Six\"); break;\n                case 7: strArr.add(\"Seven\"); break;\n                case 8: strArr.add(\"Eight\"); break;\n                case 9: strArr.add(\"Nine\"); break;\n            }\n        }\n        return strArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> copy = new ArrayList<Long>(arr);\n        ArrayList<String> result = new ArrayList<String>();\n        Collections.sort(copy);\n        Collections.reverse(copy);\n        int i = 0;\n        int j = 0;\n        while (i < copy.size()){\n            if (copy.get(i) <= 9){\n                result.add(i, getString(copy.get(i)));\n                i++;\n                j++;\n            }\n            else{\n                i++;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] names = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> result = new ArrayList<>();\n        for (Long num : arr) {\n            int index = (int)(num - 1);\n            if (num > 0 && num < 10 && index >= 0 && index < names.length) {\n                result.add(names[index]);\n            }\n        }\n        result.addAll(0, result.stream().sorted().collect(Collectors.toList()));\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> out = new ArrayList<String>();\n        for(long i:arr) {\n            if(i>0 && i<=9) {\n                out.add(convert(i));\n            }\n        }\n        Collections.reverse(out);\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Integer> range = Arrays.stream(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}).boxed().collect(Collectors.toList());\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (range.contains((int)arr.get(i))) {\n                result.add(getStr((int)arr.get(i)));\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.size() == 0){\n            return new ArrayList<String>(Arrays.asList());\n        }\n        ArrayList<String> nums = new ArrayList<String>();\n        ArrayList<Long> between = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) < 10 && arr.get(i) > 0){\n                nums.add(arr.get(i).toString());\n            }\n        }\n        Collections.reverse(nums);\n        for(int i = 0; i < nums.size(); i++){\n            switch(nums.get(i)){\n                case \"1\":\n                    between.add(1l);\n                    break;\n                case \"2\":\n                    between.add(2l);\n                    break;\n                case \"3\":\n                    between.add(3l);\n                    break;\n                case \"4\":\n                    between.add(4l);\n                    break;\n                case \"5\":\n                    between.add(5l);\n                    break;\n                case \"6\":\n                    between.add(6l);\n                    break;\n                case \"7\":\n                    between.add(7l);\n                    break;\n                case \"8\":\n                    between.add(8l);\n                    break;\n                case \"9\":\n                    between.add(9l);\n                    break;\n            }\n        }\n        ArrayList<String> finals = new ArrayList<String>();\n        for(int i = 0; i < between.size(); i++){\n            switch(between.get(i).intValue()){\n                case 1:\n                    finals.add(\"One\");\n                    break;\n                case 2:\n                    finals.add(\"Two\");\n                    break;\n                case 3:\n                    finals.add(\"Three\");\n                    break;\n                case 4:\n                    finals.add(\"Four\");\n                    break;\n                case 5:\n                    finals.add(\"Five\");\n                    break;\n                case 6:\n                    finals.add(\"Six\");\n                    break;\n                case 7:\n                    finals.add(\"Seven\");\n                    break;\n                case 8:\n                    finals.add(\"Eight\");\n                    break;\n                case 9:\n                    finals.add(\"Nine\");\n                    break;\n            }\n        }\n        return finals;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // WRITE YOUR CODE HERE\n        return null;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Generate the return ArrayList of Strings.\n        ArrayList<String> ret = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++)\n        {\n            // Check if the value is between 1 and 9.\n            if(arr.get(i) > 0 && arr.get(i) <= 9)\n            {\n                // Generate the String to add to the ArrayList.\n                String val = switch(arr.get(i))\n                {\n                    case 1 -> \"One\";\n                    case 2 -> \"Two\";\n                    case 3 -> \"Three\";\n                    case 4 -> \"Four\";\n                    case 5 -> \"Five\";\n                    case 6 -> \"Six\";\n                    case 7 -> \"Seven\";\n                    case 8 -> \"Eight\";\n                    case 9 -> \"Nine\";\n                };\n                // Add the String to the ArrayList.\n                ret.add(val);\n            }\n        }\n        // Reverse the ArrayList.\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) > 0 && arr.get(i) < 10){\n                res.add(i, name(arr.get(i)));\n            }\n        }\n        ArrayList<String> finalArr = new ArrayList<String>();\n        for(int i = res.size() - 1; i >= 0; i--){\n            finalArr.add(res.get(i));\n        }\n        return finalArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.size()==0) return new ArrayList<String>();\n        ArrayList<Long> temp=new ArrayList<Long>();\n        for(int i=0;i<arr.size();i++){\n            if(arr.get(i)>=1 && arr.get(i)<=9)\n            temp.add(arr.get(i));\n        }\n        temp.sort(Collections.reverseOrder());\n        String[] obj=new String[9];\n        obj[0]=\"One\";\n        obj[1]=\"Two\";\n        obj[2]=\"Three\";\n        obj[3]=\"Four\";\n        obj[4]=\"Five\";\n        obj[5]=\"Six\";\n        obj[6]=\"Seven\";\n        obj[7]=\"Eight\";\n        obj[8]=\"Nine\";\n        ArrayList<String> result=new ArrayList<String>();\n        for(int i=0;i<temp.size();i++)\n        result.add(obj[temp.get(i).intValue()-1]);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (Long i : arr) {\n            if (i <= 9l && i >= 1l)\n                result.add(Long.toString(i));\n        }\n        Collections.reverse(result);\n        for (int i = 0; i < result.size(); i++) {\n            if (result.get(i).equals(\"1\"))\n                result.set(i, \"One\");\n            else if (result.get(i).equals(\"2\"))\n                result.set(i, \"Two\");\n            else if (result.get(i).equals(\"3\"))\n                result.set(i, \"Three\");\n            else if (result.get(i).equals(\"4\"))\n                result.set(i, \"Four\");\n            else if (result.get(i).equals(\"5\"))\n                result.set(i, \"Five\");\n            else if (result.get(i).equals(\"6\"))\n                result.set(i, \"Six\");\n            else if (result.get(i).equals(\"7\"))\n                result.set(i, \"Seven\");\n            else if (result.get(i).equals(\"8\"))\n                result.set(i, \"Eight\");\n            else if (result.get(i).equals(\"9\"))\n                result.set(i, \"Nine\");\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        int n = 9;\n        ArrayList<Long> digits = new ArrayList<Long>();\n        ArrayList<String> names = new ArrayList<String>();\n        for (int i = 0; i < n; i++) {\n            digits.add((long)i);\n            names.add(String.valueOf(i + 1));\n        }\n        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (digits.contains(arr.get(i))) {\n                filtered.add(arr.get(i));\n            }\n        }\n        Collections.reverse(filtered);\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < filtered.size(); i++) {\n            int index = (int)(filtered.get(i) - 1);\n            result.add(names.get(index));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.isEmpty()) return new ArrayList<String>();\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) ret.add(arr.get(i));\n        }\n        Collections.reverse(ret);\n        ArrayList<String> re = new ArrayList<String>();\n        for(int i = 0; i < ret.size(); i++){\n            switch(ret.get(i).intValue()){\n                case 1:\n                    re.add(\"One\");\n                    break;\n                case 2:\n                    re.add(\"Two\");\n                    break;\n                case 3:\n                    re.add(\"Three\");\n                    break;\n                case 4:\n                    re.add(\"Four\");\n                    break;\n                case 5:\n                    re.add(\"Five\");\n                    break;\n                case 6:\n                    re.add(\"Six\");\n                    break;\n                case 7:\n                    re.add(\"Seven\");\n                    break;\n                case 8:\n                    re.add(\"Eight\");\n                    break;\n                case 9:\n                    re.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return re;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(int i=0; i<arr.size(); i++) {\n            if(arr.get(i) > 0 && arr.get(i) < 10) {\n                result.add(\"One\");\n                result.add(\"Two\");\n                result.add(\"Three\");\n                result.add(\"Four\");\n                result.add(\"Five\");\n                result.add(\"Six\");\n                result.add(\"Seven\");\n                result.add(\"Eight\");\n                result.add(\"Nine\");\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newList = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                switch(arr.get(i).intValue()) {\n                    case 1:\n                        newList.add(\"One\");\n                        break;\n                    case 2:\n                        newList.add(\"Two\");\n                        break;\n                    case 3:\n                        newList.add(\"Three\");\n                        break;\n                    case 4:\n                        newList.add(\"Four\");\n                        break;\n                    case 5:\n                        newList.add(\"Five\");\n                        break;\n                    case 6:\n                        newList.add(\"Six\");\n                        break;\n                    case 7:\n                        newList.add(\"Seven\");\n                        break;\n                    case 8:\n                        newList.add(\"Eight\");\n                        break;\n                    case 9:\n                        newList.add(\"Nine\");\n                        break;\n                }\n            }\n        }\n        Collections.reverse(newList);\n        return newList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > 0 && arr.get(i) < 10) {\n                temp.add(arr.get(i));\n            }\n        }\n        for(int i = temp.size() - 1; i >= 0; i--) {\n            result.add(getValue(temp.get(i)));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        String num;\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                num = arr.get(i).toString();\n                result.add(num.substring(0, num.length() - 1) + num.substring(num.length() - 1, num.length()).toUpperCase());\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<String> v = new ArrayList<String>();\n        for (Long i : arr) {\n            if (i > 0 && i < 10) {\n                v.add(new String[]{\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"}[i - 1]);\n            }\n        }\n        Collections.reverse(v);\n        return new ArrayList<String>(v);", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (1 <= num && num <= 9) {\n                switch ((int) num) {\n                    case 1:\n                        ret.add(\"One\");\n                        break;\n                    case 2:\n                        ret.add(\"Two\");\n                        break;\n                    case 3:\n                        ret.add(\"Three\");\n                        break;\n                    case 4:\n                        ret.add(\"Four\");\n                        break;\n                    case 5:\n                        ret.add(\"Five\");\n                        break;\n                    case 6:\n                        ret.add(\"Six\");\n                        break;\n                    case 7:\n                        ret.add(\"Seven\");\n                        break;\n                    case 8:\n                        ret.add(\"Eight\");\n                        break;\n                    case 9:\n                        ret.add(\"Nine\");\n                        break;\n                }\n            }\n        }\n        ret = ret.stream().distinct().collect(Collectors.toCollection(ArrayList::new));\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        List<Integer> numbers = arr.stream().filter(x -> x >= 1 && x <= 9).map(x -> (int) x).collect(Collectors.toList());\n        if (numbers.isEmpty()) return result;\n        Collections.reverse(numbers);\n        for (Integer i : numbers) result.add(find(i));\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] digitNames = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> result = new ArrayList<>();\n        for (long x : arr) {\n            if (x >= 1 && x <= 9) {\n                result.add(digitNames[(int)x - 1]);\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.size() == 0) return new ArrayList<String>();\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            long l = arr.get(i);\n            if (l > 0 && l < 10) {\n                result.add((int)l);\n            }\n        }\n        Collections.reverse(result);\n        ArrayList<String> finalResult = new ArrayList<String>();\n        for (int i = 0; i < result.size(); i++) {\n            String s = \"\";\n            switch (result.get(i)) {\n                case 1:\n                    s = \"One\";\n                    break;\n                case 2:\n                    s = \"Two\";\n                    break;\n                case 3:\n                    s = \"Three\";\n                    break;\n                case 4:\n                    s = \"Four\";\n                    break;\n                case 5:\n                    s = \"Five\";\n                    break;\n                case 6:\n                    s = \"Six\";\n                    break;\n                case 7:\n                    s = \"Seven\";\n                    break;\n                case 8:\n                    s = \"Eight\";\n                    break;\n                case 9:\n                    s = \"Nine\";\n                    break;\n                default:\n                    break;\n            }\n            finalResult.add(s);\n        }\n        return finalResult;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        int i = 0;\n        while (i < arr.size()) {\n            if (arr.get(i) < 1 || arr.get(i) > 9) {\n                arr.remove(i);\n            } else {\n                i++;\n            }\n        }\n        Collections.reverse(arr);\n        ArrayList<String> result = new ArrayList<>();\n        while (!arr.isEmpty()) {\n            result.add(arr.get(0) + \"\");\n            arr.remove(0);\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return (ArrayList<String>)((ArrayList<String>)Stream.of(arr).map(l -> {if(l < 1 || l > 9)return \"\"; else return \"\"+l;}).filter(s -> !s.isEmpty()).map(l -> Long.parseLong(l)).distinct().map(l -> {if(l == 1)return \"One\"; else if(l == 2)return \"Two\"; else if(l == 3)return \"Three\"; else if(l == 4)return \"Four\"; else if(l == 5)return \"Five\"; else if(l == 6)return \"Six\"; else if(l == 7)return \"Seven\"; else if(l == 8)return \"Eight\"; else if(l == 9)return \"Nine\"; else return \"\";}).sorted(Collections.reverseOrder()).collect(Collectors.toList()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        HashMap<Long, String> map = new HashMap<>();\n        map.put(1l, \"One\");\n        map.put(2l, \"Two\");\n        map.put(3l, \"Three\");\n        map.put(4l, \"Four\");\n        map.put(5l, \"Five\");\n        map.put(6l, \"Six\");\n        map.put(7l, \"Seven\");\n        map.put(8l, \"Eight\");\n        map.put(9l, \"Nine\");\n        ArrayList<String> newArr = new ArrayList<>();\n        for (long num : arr) {\n            if (map.containsKey(num)) {\n                newArr.add(map.get(num));\n            }\n        }\n        Collections.reverse(newArr);\n        return newArr;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        ArrayList<Long> aux = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                aux.add(arr.get(i));\n            }\n        }\n        for (int i = aux.size() - 1; i >= 0; i--) {\n            result.add(Integer.toString(aux.get(i).intValue()));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return Stream.of(arr.stream().filter(i -> i >= 1 && i <= 9).sorted().map(i -> switch (i) {\n            case 1 -> \"One\";\n            case 2 -> \"Two\";\n            case 3 -> \"Three\";\n            case 4 -> \"Four\";\n            case 5 -> \"Five\";\n            case 6 -> \"Six\";\n            case 7 -> \"Seven\";\n            case 8 -> \"Eight\";\n            case 9 -> \"Nine\";\n        }).collect(Collectors.toList()).descendingIterator())\n            .flatMap(Collection::stream)\n            .collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(Long i : arr){\n            if(i >= 1 && i <= 9)\n                result.add(Integer.toString(i));\n        }\n        Collections.reverse(result);\n        for(int i = 0; i < result.size(); i++){\n            result.set(i, Character.toString(result.get(i).charAt(0)).toUpperCase() + result.get(i).substring(1));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<String>(Arrays.asList(arr.stream()\n            .filter(n -> n >= 1 && n <= 9)\n            .sorted().collect(Collectors.toList())))\n            .stream().map(n -> \"OneTwoThreeFourFiveSixSevenEightNine\".substring(n - 1, n)).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.isEmpty()) return new ArrayList<>();\n        ArrayList<Long> newArr = new ArrayList<>(arr);\n        newArr.stream().filter(n -> (n <= 9 && n >= 1))\n            .mapToObj(n -> new AbstractMap.SimpleEntry<>(n, \"OneTwoThreeFourFiveSixSevenEightNine\".split(\"\")[(int)n - 1])).forEach(n -> n.setValue(n.getValue().toUpperCase()));\n        newArr = new ArrayList<>(newArr.stream().filter(n -> n > 9 || n < 1));\n        Collections.reverse(newArr);\n        return new ArrayList<>(newArr.stream().map(n -> (String)n.getValue()));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> finalResult = new ArrayList<String>();\n        ArrayList<Long> listOfNumbers = new ArrayList<Long>();\n        String[] arrOfWords = new String[10];\n        for (Long i: arr) {\n            if (i >= 1 && i <= 9) {\n                listOfNumbers.add(i);\n            }\n        }\n        arrOfWords[1] = \"One\";\n        arrOfWords[2] = \"Two\";\n        arrOfWords[3] = \"Three\";\n        arrOfWords[4] = \"Four\";\n        arrOfWords[5] = \"Five\";\n        arrOfWords[6] = \"Six\";\n        arrOfWords[7] = \"Seven\";\n        arrOfWords[8] = \"Eight\";\n        arrOfWords[9] = \"Nine\";\n        Collections.reverse(listOfNumbers);\n        for (Long i: listOfNumbers) {\n            finalResult.add(arrOfWords[(int)i]);\n        }\n        return finalResult;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return arr.stream()\n        .filter(Long::isBetween)\n        .sorted(Comparator.reverseOrder())\n        .map(Problem::convert)\n        .collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.size() == 0) return new ArrayList<String>();\n        ArrayList<Long> between1to9 = new ArrayList<Long>();\n        ArrayList<String> newList = new ArrayList<String>();\n        for (long i : arr) {\n            if(i > 0 && i < 10) between1to9.add(i);\n        }\n        for (long i : between1to9) {\n            switch ((int) i) {\n                case 1:\n                    newList.add(\"One\");\n                    break;\n                case 2:\n                    newList.add(\"Two\");\n                    break;\n                case 3:\n                    newList.add(\"Three\");\n                    break;\n                case 4:\n                    newList.add(\"Four\");\n                    break;\n                case 5:\n                    newList.add(\"Five\");\n                    break;\n                case 6:\n                    newList.add(\"Six\");\n                    break;\n                case 7:\n                    newList.add(\"Seven\");\n                    break;\n                case 8:\n                    newList.add(\"Eight\");\n                    break;\n                case 9:\n                    newList.add(\"Nine\");\n                    break;\n            }\n        }\n        Collections.reverse(newList);\n        return newList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> out = new ArrayList<String>();\n        for(Long num: arr) {\n            if(num > 0 && num < 10) {\n                out.add(String.valueOf(num));\n            }\n        }\n        Collections.reverse(out);\n        for(int i = 0; i < out.size(); i++) {\n            out.set(i, out.get(i).equals(\"1\") ? \"One\" : out.get(i).equals(\"2\") ? \"Two\" :\n                    out.get(i).equals(\"3\") ? \"Three\" : out.get(i).equals(\"4\") ? \"Four\" :\n                    out.get(i).equals(\"5\") ? \"Five\" : out.get(i).equals(\"6\") ? \"Six\" :\n                    out.get(i).equals(\"7\") ? \"Seven\" : out.get(i).equals(\"8\") ? \"Eight\" : \"Nine\");\n        }\n        return out;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<Integer> intArr = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9)\n                intArr.add((int)arr.get(i));\n        }\n        Collections.reverse(intArr);\n        for(int i = 0; i < intArr.size(); i++) {\n            if(intArr.get(i) == 1)\n                res.add(\"One\");\n            else if(intArr.get(i) == 2)\n                res.add(\"Two\");\n            else if(intArr.get(i) == 3)\n                res.add(\"Three\");\n            else if(intArr.get(i) == 4)\n                res.add(\"Four\");\n            else if(intArr.get(i) == 5)\n                res.add(\"Five\");\n            else if(intArr.get(i) == 6)\n                res.add(\"Six\");\n            else if(intArr.get(i) == 7)\n                res.add(\"Seven\");\n            else if(intArr.get(i) == 8)\n                res.add(\"Eight\");\n            else if(intArr.get(i) == 9)\n                res.add(\"Nine\");\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        for(long i : arr) {\n            if(i > 0 && i <= 9) ans.add(i == 1 ? \"One\" : i == 2 ? \"Two\" : i == 3 ? \"Three\" : i == 4 ? \"Four\" : i == 5 ? \"Five\" : i == 6 ? \"Six\" : i == 7 ? \"Seven\" : i == 8 ? \"Eight\" : \"Nine\");\n        }\n        Collections.reverse(ans);\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> numbers = new ArrayList<>();\n        ArrayList<String> names = new ArrayList<>();\n        for (long i : arr) {\n            int temp = (int) i;\n            if (temp > 0 && temp < 10) {\n                numbers.add(temp);\n            }\n        }\n        numbers.stream().sorted().forEach(i -> names.add(String.valueOf(i)));\n        ArrayList<String> result = new ArrayList<>();\n        for (int i = numbers.size() - 1; i >= 0; i--) {\n            result.add(names.get(i));\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n            long x = arr.get(i);\n            if (x >= 1 && x <= 9) {\n                ret.add(x + \"\");\n            }\n        }\n        Collections.reverse(ret);\n        for (int i = 0; i < ret.size(); i++) {\n            long x = Long.parseLong(ret.get(i));\n            ret.set(i, x + \"\");\n        }\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); ++i) {\n            long temp = arr.get(i);\n            if(temp > 0 && temp < 10) res.add(String.valueOf(temp));\n        }\n        Collections.reverse(res);\n        for(int i = 0; i < res.size(); ++i) res.set(i, String.valueOf(res.get(i).charAt(0)));\n        res.set(0, \"One\"); res.set(1, \"Two\"); res.set(2, \"Three\"); res.set(3, \"Four\"); res.set(4, \"Five\"); res.set(5, \"Six\"); res.set(6, \"Seven\"); res.set(7, \"Eight\"); res.set(8, \"Nine\");\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> r = new ArrayList<String>();\n        ArrayList<String> s = new ArrayList<String>();\n        if(arr.size() == 0) return s;\n        for(long i : arr){\n            if(i > 0 && i < 10)\n                s.add(i + \"\");\n        }\n        for(int i = s.size() - 1; i >= 0; --i)\n            r.add(s.get(i));\n        return r;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<>();\n        for(Long num: arr){\n            if(num <= 9 && num >= 1) res.add(num.toString());\n        }\n        res.sort(Collections.reverseOrder());\n        for(int i = 0; i < res.size(); i++){\n            res.set(i, res.get(i).replace(res.get(i), getName(Long.parseLong(res.get(i)))));\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> s = new ArrayList<String>();\n        for(Long i : arr) {\n            if(i <= 9 && i >= 1) s.add(\"\" + i);\n        }\n        Collections.reverse(s);\n        ArrayList<String> a = new ArrayList<String>();\n        for(String i : s) {\n            switch(i) {\n                case \"1\": a.add(\"One\"); break;\n                case \"2\": a.add(\"Two\"); break;\n                case \"3\": a.add(\"Three\"); break;\n                case \"4\": a.add(\"Four\"); break;\n                case \"5\": a.add(\"Five\"); break;\n                case \"6\": a.add(\"Six\"); break;\n                case \"7\": a.add(\"Seven\"); break;\n                case \"8\": a.add(\"Eight\"); break;\n                case \"9\": a.add(\"Nine\"); break;\n            }\n        }\n        return a;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> list = new ArrayList<>();\n        for(long i : arr){\n            if(i >= 1 && i <= 9){\n                list.add(i + \"\");\n            }\n        }\n        Collections.reverse(list);\n        ArrayList<String> newList = new ArrayList<>();\n        for(String i : list){\n            switch(i){\n                case \"1\":\n                    newList.add(\"One\");\n                    break;\n                case \"2\":\n                    newList.add(\"Two\");\n                    break;\n                case \"3\":\n                    newList.add(\"Three\");\n                    break;\n                case \"4\":\n                    newList.add(\"Four\");\n                    break;\n                case \"5\":\n                    newList.add(\"Five\");\n                    break;\n                case \"6\":\n                    newList.add(\"Six\");\n                    break;\n                case \"7\":\n                    newList.add(\"Seven\");\n                    break;\n                case \"8\":\n                    newList.add(\"Eight\");\n                    break;\n                case \"9\":\n                    newList.add(\"Nine\");\n                    break;\n            }\n        }\n        return newList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Integer> numbers = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                numbers.add((int) arr.get(i));\n            }\n        }\n        Collections.reverse(numbers);\n        for (int i = 0; i < numbers.size(); i++) {\n            switch (numbers.get(i)) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> answer = new ArrayList<String>();\n        ArrayList<Integer> sortArr = new ArrayList<Integer>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < 10 && arr.get(i) > 0) {\n                sortArr.add((int)arr.get(i));\n            }\n        }\n        sortArr.sort(Collections.reverseOrder());\n        for (int i = 0; i < sortArr.size(); i++) {\n            answer.add(i, byLengthHelper(sortArr.get(i)));\n        }\n        return answer;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        ArrayList<Long> unique = new ArrayList<>();\n        ArrayList<Long> special = new ArrayList<>();\n        for (Long i : arr) {\n            if (i >= 1 && i <= 9) {\n                unique.add(i);\n            } else {\n                special.add(i);\n            }\n        }\n        Collections.sort(unique);\n        Collections.reverse(unique);\n        for (Long i : unique) {\n            result.add(i + \"\");\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newArr = new ArrayList<String>();\n        for(Long a : arr) {\n            if(a > 0 && a < 10) {\n                newArr.add(a.toString());\n            }\n        }\n        Collections.reverse(newArr);\n        ArrayList<String> newArr2 = new ArrayList<String>();\n        for(String s : newArr) {\n            if(s.equals(\"1\")) {\n                newArr2.add(\"One\");\n            }\n            else if(s.equals(\"2\")) {\n                newArr2.add(\"Two\");\n            }\n            else if(s.equals(\"3\")) {\n                newArr2.add(\"Three\");\n            }\n            else if(s.equals(\"4\")) {\n                newArr2.add(\"Four\");\n            }\n            else if(s.equals(\"5\")) {\n                newArr2.add(\"Five\");\n            }\n            else if(s.equals(\"6\")) {\n                newArr2.add(\"Six\");\n            }\n            else if(s.equals(\"7\")) {\n                newArr2.add(\"Seven\");\n            }\n            else if(s.equals(\"8\")) {\n                newArr2.add(\"Eight\");\n            }\n            else if(s.equals(\"9\")) {\n                newArr2.add(\"Nine\");\n            }\n        }\n        return newArr2;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for (long i: arr) {\n            if (i >= 1 && i <= 9) res.add(i + \"\");\n        }\n        Collections.reverse(res);\n        for (int i = 0; i < res.size(); i++) {\n            res.set(i, res.get(i).charAt(0) + \"\");\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        HashMap<Long, String> hm = new HashMap<>();\n        hm.put(1l, \"One\");\n        hm.put(2l, \"Two\");\n        hm.put(3l, \"Three\");\n        hm.put(4l, \"Four\");\n        hm.put(5l, \"Five\");\n        hm.put(6l, \"Six\");\n        hm.put(7l, \"Seven\");\n        hm.put(8l, \"Eight\");\n        hm.put(9l, \"Nine\");\n        for(Long num: arr){\n            if(hm.containsKey(num)){\n                result.add(hm.get(num));\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.isEmpty())\n            return new ArrayList<String>();\n        else\n        {\n            ArrayList<String> str_arr = new ArrayList<String>();\n            for(int i=0;i<arr.size();i++)\n            {\n                if(arr.get(i) < 10 && arr.get(i) >= 1)\n                {\n                    if(arr.get(i) == 1)\n                    {\n                        str_arr.add(\"One\");\n                    }\n                    if(arr.get(i) == 2)\n                    {\n                        str_arr.add(\"Two\");\n                    }\n                    if(arr.get(i) == 3)\n                    {\n                        str_arr.add(\"Three\");\n                    }\n                    if(arr.get(i) == 4)\n                    {\n                        str_arr.add(\"Four\");\n                    }\n                    if(arr.get(i) == 5)\n                    {\n                        str_arr.add(\"Five\");\n                    }\n                    if(arr.get(i) == 6)\n                    {\n                        str_arr.add(\"Six\");\n                    }\n                    if(arr.get(i) == 7)\n                    {\n                        str_arr.add(\"Seven\");\n                    }\n                    if(arr.get(i) == 8)\n                    {\n                        str_arr.add(\"Eight\");\n                    }\n                    if(arr.get(i) == 9)\n                    {\n                        str_arr.add(\"Nine\");\n                    }\n                }\n            }\n            ArrayList<String> arr_rev = new ArrayList<String>(str_arr);\n            Collections.reverse(arr_rev);\n            return arr_rev;\n        }", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        if (arr.isEmpty()) {\n            return result;\n        }\n        ArrayList<Long> between1and9 = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                between1and9.add(arr.get(i));\n            }\n        }\n        Collections.reverse(between1and9);\n        for (int i = 0; i < between1and9.size(); i++) {\n            switch (between1and9.get(i).intValue()) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> s = new ArrayList<>();\n        for(long a: arr){\n            if(a>0 && a<10)\n                s.add(numberToString(a));\n        }\n        Collections.reverse(s);\n        return s;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<>();\n        for (Long el : arr) {\n            if (1 <= el && el <= 9) {\n                res.add(el.intValue() == 1 ? \"One\" : el.intValue() == 2 ? \"Two\" : el.intValue() == 3 ? \"Three\" : el.intValue() == 4 ? \"Four\" : el.intValue() == 5 ? \"Five\" : el.intValue() == 6 ? \"Six\" : el.intValue() == 7 ? \"Seven\" : el.intValue() == 8 ? \"Eight\" : \"Nine\");\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> sorted = new ArrayList<>();\n        for(long x : arr) {\n            if(x >= 1 && x <= 9) sorted.add(x);\n        }\n        Collections.reverse(sorted);\n        ArrayList<String> result = new ArrayList<>();\n        for(long x : sorted) {\n            switch((int)x) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> inRange = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n            Long num = arr.get(i);\n            if (num >= 1 && num <= 9) inRange.add(num);\n        }\n        Collections.reverse(inRange);\n        ArrayList<String> newList = new ArrayList<String>();\n        for (int i = 0; i < inRange.size(); i++) {\n            Long num = inRange.get(i);\n            switch (num.intValue()) {\n                case 1: newList.add(\"One\"); break;\n                case 2: newList.add(\"Two\"); break;\n                case 3: newList.add(\"Three\"); break;\n                case 4: newList.add(\"Four\"); break;\n                case 5: newList.add(\"Five\"); break;\n                case 6: newList.add(\"Six\"); break;\n                case 7: newList.add(\"Seven\"); break;\n                case 8: newList.add(\"Eight\"); break;\n                case 9: newList.add(\"Nine\"); break;\n            }\n        }\n        return newList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Write your code here\n        List<String> lst = new ArrayList<String>();\n        for (long i: arr){\n            if (i>0 && i<10){\n                switch ((int)i) {\n                    case 1: lst.add(\"One\");\n                            break;\n                    case 2: lst.add(\"Two\");\n                            break;\n                    case 3: lst.add(\"Three\");\n                            break;\n                    case 4: lst.add(\"Four\");\n                            break;\n                    case 5: lst.add(\"Five\");\n                            break;\n                    case 6: lst.add(\"Six\");\n                            break;\n                    case 7: lst.add(\"Seven\");\n                            break;\n                    case 8: lst.add(\"Eight\");\n                            break;\n                    case 9: lst.add(\"Nine\");\n                            break;\n                }\n            }\n        }\n        Collections.reverse(lst);\n        return (ArrayList<String>) lst;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return arr.stream().filter(i -> i <= 9 && i >= 1).boxed().collect(Collectors.toCollection(ArrayList::new)).stream().map(String::valueOf).map(s -> {\n            switch (s) {\n                case \"1\":\n                    return \"One\";\n                case \"2\":\n                    return \"Two\";\n                case \"3\":\n                    return \"Three\";\n                case \"4\":\n                    return \"Four\";\n                case \"5\":\n                    return \"Five\";\n                case \"6\":\n                    return \"Six\";\n                case \"7\":\n                    return \"Seven\";\n                case \"8\":\n                    return \"Eight\";\n                case \"9\":\n                    return \"Nine\";\n                default:\n                    throw new IllegalArgumentException();\n            }\n        }).collect(Collectors.toCollection(ArrayList::new)).stream().map(s -> {\n            switch (s) {\n                case \"One\":\n                    return \"One\";\n                case \"Two\":\n                    return \"Two\";\n                case \"Three\":\n                    return \"Three\";\n                case \"Four\":\n                    return \"Four\";\n                case \"Five\":\n                    return \"Five\";\n                case \"Six\":\n                    return \"Six\";\n                case \"Seven\":\n                    return \"Seven\";\n                case \"Eight\":\n                    return \"Eight\";\n                case \"Nine\":\n                    return \"Nine\";\n                default:\n                    throw new IllegalArgumentException();\n            }\n        }).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        for (Long i : arr) {\n            if (i > 0 && i < 10) ret.add(i.toString());\n        }\n        Collections.reverse(ret);\n        for (int i = 0; i < ret.size(); i++) ret.set(i, switch(ret.get(i)) {\n            case \"1\" -> \"One\";\n            case \"2\" -> \"Two\";\n            case \"3\" -> \"Three\";\n            case \"4\" -> \"Four\";\n            case \"5\" -> \"Five\";\n            case \"6\" -> \"Six\";\n            case \"7\" -> \"Seven\";\n            case \"8\" -> \"Eight\";\n            case \"9\" -> \"Nine\";\n        });\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] digits = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> result = new ArrayList<>();\n        arr.stream()\n            .filter(n -> n > 0 && n < 10)\n            .map(n -> digits[n.intValue() - 1])\n            .sorted(Collections.reverseOrder())\n            .forEach(s -> result.add(s));\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.isEmpty()) return new ArrayList<String>();\n        ArrayList<Long> s = new ArrayList<Long>();\n        ArrayList<Long> l = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\n            if (arr.get(i) <= 9 && arr.get(i) >= 1)\n                s.add(arr.get(i));\n            else if (arr.get(i) >= 10)\n                l.add(arr.get(i));\n        Collections.sort(s);\n        Collections.reverse(s);\n        ArrayList<String> res = new ArrayList<String>();\n        for (int i = 0; i < s.size(); i++) {\n            if (s.get(i) == 1) res.add(\"One\");\n            else if (s.get(i) == 2) res.add(\"Two\");\n            else if (s.get(i) == 3) res.add(\"Three\");\n            else if (s.get(i) == 4) res.add(\"Four\");\n            else if (s.get(i) == 5) res.add(\"Five\");\n            else if (s.get(i) == 6) res.add(\"Six\");\n            else if (s.get(i) == 7) res.add(\"Seven\");\n            else if (s.get(i) == 8) res.add(\"Eight\");\n            else if (s.get(i) == 9) res.add(\"Nine\");\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                temp.add(arr.get(i));\n            }\n        }\n        temp.sort(Collections.reverseOrder());\n        for(int i = 0; i < temp.size(); i++) {\n            switch((int)temp.get(i)) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n                default:\n                    result.add(\"\");\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.isEmpty()) return new ArrayList<String>();\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<Long> nums = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) >= 1 && arr.get(i) <= 9){\n                nums.add(arr.get(i));\n            }\n        }\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for(int i = 0; i < nums.size(); i++){\n            temp.add(nums.get(i));\n        }\n        Collections.reverse(temp);\n        for(int i = 0; i < temp.size(); i++){\n            res.add(Integer.toString(temp.get(i).intValue()).replace(\"1\",\"One\").replace(\"2\",\"Two\").replace(\"3\",\"Three\").replace(\"4\",\"Four\").replace(\"5\",\"Five\").replace(\"6\",\"Six\").replace(\"7\",\"Seven\").replace(\"8\",\"Eight\").replace(\"9\",\"Nine\"));\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> output = new ArrayList<String>();\n        for (long i : arr) {\n            try {\n                output.add(getNames(i).toString());\n            } catch (Exception e) {\n                continue;\n            }\n        }\n        output.sort(Comparator.reverseOrder());\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] arr2 = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> ans = new ArrayList<String>();\n        for(long i : arr){\n            if(i > 0 && i < 10){\n                ans.add(arr2[(int) i - 1]);\n            }\n        }\n        ans.sort(Collections.reverseOrder());\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ans = new ArrayList<String>();\n        if (arr.size()==0) {\n            return ans;\n        }\n        for (Long num: arr) {\n            if (num <= 9 && num >= 1) {\n                ans.add(String.valueOf(num));\n            }\n        }\n        Collections.reverse(ans);\n        for (int i = 0; i < ans.size(); i++) {\n            switch (ans.get(i)) {\n                case \"1\":\n                    ans.set(i, \"One\");\n                    break;\n                case \"2\":\n                    ans.set(i, \"Two\");\n                    break;\n                case \"3\":\n                    ans.set(i, \"Three\");\n                    break;\n                case \"4\":\n                    ans.set(i, \"Four\");\n                    break;\n                case \"5\":\n                    ans.set(i, \"Five\");\n                    break;\n                case \"6\":\n                    ans.set(i, \"Six\");\n                    break;\n                case \"7\":\n                    ans.set(i, \"Seven\");\n                    break;\n                case \"8\":\n                    ans.set(i, \"Eight\");\n                    break;\n                case \"9\":\n                    ans.set(i, \"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return ans;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.isEmpty()) return new ArrayList<String>();\n        ArrayList<String> res = new ArrayList<String>();\n        for(Long i : arr){\n            if(i > 0 && i < 10)\n                res.add(i.toString());\n        }\n        Collections.sort(res);\n        Collections.reverse(res);\n        ArrayList<String> ret = new ArrayList<String>();\n        for(int i = 0; i < res.size(); ++i)\n            ret.add(byNum(res.get(i)));\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        return new ArrayList<>();", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Integer> digitList = new ArrayList<Integer>();\n        ArrayList<String> mapList = new ArrayList<String>();\n        // store the number from 1 to 9\n        for(int i = 1; i <= 9; i++) {\n            digitList.add(i);\n            mapList.add(i + \"\");\n        }\n        // construct a hash map based on the number and its corresponding name\n        Map<Integer, String> map = new HashMap<>();\n        for(int i = 0; i < digitList.size(); i++) {\n            map.put(digitList.get(i), mapList.get(i));\n        }\n        // check the number is between 1 and 9\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) >= 1 && arr.get(i) <= 9) {\n                result.add(map.get(arr.get(i).intValue()));\n            }\n        }\n        // reverse the result\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Write your code here\n        ArrayList<String> res = new ArrayList<String>();\n        for (Long i : arr) {\n            if (i > 0 && i < 10) {\n                res.add(Integer.toString(i.intValue() - 1).replaceAll(\"0\", \"One\")\n                    .replaceAll(\"1\", \"Two\")\n                    .replaceAll(\"2\", \"Three\")\n                    .replaceAll(\"3\", \"Four\")\n                    .replaceAll(\"4\", \"Five\")\n                    .replaceAll(\"5\", \"Six\")\n                    .replaceAll(\"6\", \"Seven\")\n                    .replaceAll(\"7\", \"Eight\")\n                    .replaceAll(\"8\", \"Nine\"));\n            }\n        }\n        Collections.reverse(res);\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        ArrayList<Long> copy = (ArrayList<Long>) arr.clone();\n        ArrayList<Integer> numbers = new ArrayList<Integer>();\n        for(int i = 1; i < 10; i++){\n            numbers.add(i);\n        }\n        Collections.sort(copy);\n        for(Long num : copy){\n            if(num >= 1 && num <= 9){\n                ret.add(Integer.toString(num).replaceAll(\".\",\n                    map.get(Integer.toString(num))\n                ));\n            }\n        }\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        String[] names = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n        ArrayList<String> result = new ArrayList<String>();\n        for(Long num : arr){\n            if(num >= 1 && num <= 9)\n                result.add(names[(int)num - 1]);\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(long e : arr) {\n            if(e > 0 && e <= 9) {\n                result.add(switch(e) {\n                    case 1 -> \"One\";\n                    case 2 -> \"Two\";\n                    case 3 -> \"Three\";\n                    case 4 -> \"Four\";\n                    case 5 -> \"Five\";\n                    case 6 -> \"Six\";\n                    case 7 -> \"Seven\";\n                    case 8 -> \"Eight\";\n                    case 9 -> \"Nine\";\n                    default -> \"\";\n                });\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> output = new ArrayList<String>();\n        //ArrayList<Integer> newArr = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) < 10 && arr.get(i) >= 0){\n                output.add(Integer.toString(arr.get(i).intValue()));\n            }\n        }\n        Collections.reverse(output);\n        for(int i = 0; i < output.size(); i++){\n            if(output.get(i).equals(\"0\")){\n                output.set(i, \"Zero\");\n            }\n            else if(output.get(i).equals(\"1\")){\n                output.set(i, \"One\");\n            }\n            else if(output.get(i).equals(\"2\")){\n                output.set(i, \"Two\");\n            }\n            else if(output.get(i).equals(\"3\")){\n                output.set(i, \"Three\");\n            }\n            else if(output.get(i).equals(\"4\")){\n                output.set(i, \"Four\");\n            }\n            else if(output.get(i).equals(\"5\")){\n                output.set(i, \"Five\");\n            }\n            else if(output.get(i).equals(\"6\")){\n                output.set(i, \"Six\");\n            }\n            else if(output.get(i).equals(\"7\")){\n                output.set(i, \"Seven\");\n            }\n            else if(output.get(i).equals(\"8\")){\n                output.set(i, \"Eight\");\n            }\n            else if(output.get(i).equals(\"9\")){\n                output.set(i, \"Nine\");\n            }\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <= 9 && arr.get(i) >= 1) {\n                result.add(i, (i + 1) + \"\");\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // Write your code here\n        ArrayList<String> result = new ArrayList<String>();\n        for (long i : arr) {\n            if (i >= 1 && i <= 9) {\n                result.add(NumberToName(i));\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        // for (int i = 0; i < arr.size(); i++) {\n        //     if (arr.get(i) < 1 || arr.get(i) > 9) {\n        //         arr.remove(i);\n        //         i--;\n        //     }\n        // }\n        // Collections.sort(arr);\n        // Collections.reverse(arr);\n        // ArrayList<String> res = new ArrayList<>();\n        // for (long i : arr) {\n        //     res.add(String.valueOf(i));\n        // }\n        // for (int i = 0; i < res.size(); i++) {\n        //     switch (res.get(i)) {\n        //         case \"1\" -> res.set(i, \"One\");\n        //         case \"2\" -> res.set(i, \"Two\");\n        //         case \"3\" -> res.set(i, \"Three\");\n        //         case \"4\" -> res.set(i, \"Four\");\n        //         case \"5\" -> res.set(i, \"Five\");\n        //         case \"6\" -> res.set(i, \"Six\");\n        //         case \"7\" -> res.set(i, \"Seven\");\n        //         case \"8\" -> res.set(i, \"Eight\");\n        //         case \"9\" -> res.set(i, \"Nine\");\n        //     }\n        // }\n        // return res;\n        ArrayList<String> res = new ArrayList<>();\n        for (long i : arr) {\n            if (i >= 1 && i <= 9) {\n                switch ((int) i) {\n                    case 1 -> res.add(\"One\");\n                    case 2 -> res.add(\"Two\");\n                    case 3 -> res.add(\"Three\");\n                    case 4 -> res.add(\"Four\");\n                    case 5 -> res.add(\"Five\");\n                    case 6 -> res.add(\"Six\");\n                    case 7 -> res.add(\"Seven\");\n                    case 8 -> res.add(\"Eight\");\n                    case 9 -> res.add(\"Nine\");\n                }\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> ret = new ArrayList<String>();\n        if(arr.size() == 0) return ret;\n        for(int i = 0; i < arr.size(); i++) {\n            long n = arr.get(i);\n            if(n >= 1 && n <= 9) {\n                ret.add(byLength(n));\n            }\n        }\n        Collections.reverse(ret);\n        return ret;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> digits = new ArrayList<Long>();\n        for (Long n : arr) {\n            if (n >= 1 && n <= 9) digits.add(n);\n        }\n        Collections.reverse(digits);\n        ArrayList<String> words = new ArrayList<String>();\n        for (Long n : digits) {\n            switch(n) {\n                case 1: words.add(\"One\"); break;\n                case 2: words.add(\"Two\"); break;\n                case 3: words.add(\"Three\"); break;\n                case 4: words.add(\"Four\"); break;\n                case 5: words.add(\"Five\"); break;\n                case 6: words.add(\"Six\"); break;\n                case 7: words.add(\"Seven\"); break;\n                case 8: words.add(\"Eight\"); break;\n                case 9: words.add(\"Nine\"); break;\n            }\n        }\n        return words;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) > 0 && arr.get(i) < 10)\n                res.add(i, String.valueOf(arr.get(i)));\n        }\n        Collections.reverse(res);\n        if(res.size() == 0)\n            return res;\n        for(int i = 0; i < res.size(); i++){\n            if(res.get(i).equals(\"1\"))\n                res.set(i, \"One\");\n            if(res.get(i).equals(\"2\"))\n                res.set(i, \"Two\");\n            if(res.get(i).equals(\"3\"))\n                res.set(i, \"Three\");\n            if(res.get(i).equals(\"4\"))\n                res.set(i, \"Four\");\n            if(res.get(i).equals(\"5\"))\n                res.set(i, \"Five\");\n            if(res.get(i).equals(\"6\"))\n                res.set(i, \"Six\");\n            if(res.get(i).equals(\"7\"))\n                res.set(i, \"Seven\");\n            if(res.get(i).equals(\"8\"))\n                res.set(i, \"Eight\");\n            if(res.get(i).equals(\"9\"))\n                res.set(i, \"Nine\");\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> sorted = new ArrayList<String>(Arrays.asList((String)\"One\", (String)\"Two\", (String)\"Three\", (String)\"Four\", (String)\"Five\", (String)\"Six\", (String)\"Seven\", (String)\"Eight\", (String)\"Nine\"));\n        ArrayList<String> result = new ArrayList<String>();\n        ArrayList<Integer> temp = new ArrayList<Integer>();\n        for(int i = 0; i < arr.size(); i++) {\n            int current = (int)arr.get(i);\n            if(current >= 1 && current <= 9)\n                temp.add(current);\n        }\n        for(int i = 0; i < temp.size(); i++)\n            result.add(sorted.get(temp.get(i) - 1));\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Integer> temp = new ArrayList<Integer>();\n        for(int i=0;i<arr.size();i++)\n        {\n            if(arr.get(i)>=1 && arr.get(i)<=9)\n            {\n                temp.add((int)arr.get(i));\n            }\n        }\n        temp.sort(Collections.reverseOrder());\n        ArrayList<String> output = new ArrayList<String>();\n        for(int i=0;i<temp.size();i++)\n        {\n            switch(temp.get(i))\n            {\n                case 1:\n                    output.add(\"One\");\n                    break;\n                case 2:\n                    output.add(\"Two\");\n                    break;\n                case 3:\n                    output.add(\"Three\");\n                    break;\n                case 4:\n                    output.add(\"Four\");\n                    break;\n                case 5:\n                    output.add(\"Five\");\n                    break;\n                case 6:\n                    output.add(\"Six\");\n                    break;\n                case 7:\n                    output.add(\"Seven\");\n                    break;\n                case 8:\n                    output.add(\"Eight\");\n                    break;\n                case 9:\n                    output.add(\"Nine\");\n                    break;\n            }\n        }\n        return output;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> newArrayList = new ArrayList<String>();\n        int counter = 0;\n        for (long num : arr) {\n            if (num >= 1 && num <= 9) {\n                newArrayList.add(counter, num == 1 ? \"One\" : num == 2 ? \"Two\" : num == 3 ? \"Three\" : num == 4 ? \"Four\" : num == 5 ? \"Five\" : num == 6 ? \"Six\" : num == 7 ? \"Seven\" : num == 8 ? \"Eight\" : \"Nine\");\n                counter++;\n            }\n        }\n        newArrayList.sort(Collections.reverseOrder());\n        return newArrayList;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for(long i : arr){\n            if(i > 0 && i < 10){\n                result.add(i.toString());\n            }\n        }\n        Collections.reverse(result);\n        for(int i = 0; i < result.size(); i++){\n            switch(result.get(i)){\n                case \"1\":\n                    result.set(i, \"One\");\n                    break;\n                case \"2\":\n                    result.set(i, \"Two\");\n                    break;\n                case \"3\":\n                    result.set(i, \"Three\");\n                    break;\n                case \"4\":\n                    result.set(i, \"Four\");\n                    break;\n                case \"5\":\n                    result.set(i, \"Five\");\n                    break;\n                case \"6\":\n                    result.set(i, \"Six\");\n                    break;\n                case \"7\":\n                    result.set(i, \"Seven\");\n                    break;\n                case \"8\":\n                    result.set(i, \"Eight\");\n                    break;\n                case \"9\":\n                    result.set(i, \"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if(arr.size()==0) return new ArrayList<String>();\n        ArrayList<String> res = new ArrayList<String>();\n        ArrayList<Long> between1and9 = new ArrayList<Long>();\n        for(long x : arr) if(x>0 && x<10) between1and9.add(x);\n        res.addAll(between1and9);\n        Collections.reverse(res);\n        for(int i = 0 ; i < res.size() ; i++)\n            res.set(i, getName(res.get(i)));\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        if (arr.size() == 0) return new ArrayList<String>();\n        List<Long> l = arr.stream().filter(i -> i >= 1 && i <= 9).collect(Collectors.toList());\n        Collections.reverse(l);\n        return l.stream().map(i -> {\n            String[] a = {\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n            return a[i.intValue() - 1];\n        }).collect(Collectors.toCollection(ArrayList::new));", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> res = new ArrayList<String>();\n        for (long i : arr) {\n            if (i >= 1 && i <= 9)\n                res.add(i + \"\");\n        }\n        Collections.reverse(res);\n        for (int i = 0; i < res.size(); i++) {\n            switch (res.get(i)) {\n                case \"1\":\n                    res.set(i, \"One\");\n                    break;\n                case \"2\":\n                    res.set(i, \"Two\");\n                    break;\n                case \"3\":\n                    res.set(i, \"Three\");\n                    break;\n                case \"4\":\n                    res.set(i, \"Four\");\n                    break;\n                case \"5\":\n                    res.set(i, \"Five\");\n                    break;\n                case \"6\":\n                    res.set(i, \"Six\");\n                    break;\n                case \"7\":\n                    res.set(i, \"Seven\");\n                    break;\n                case \"8\":\n                    res.set(i, \"Eight\");\n                    break;\n                case \"9\":\n                    res.set(i, \"Nine\");\n                    break;\n            }\n        }\n        return res;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >= 1 && arr.get(i) <= 9) {\n                switch ((int) arr.get(i)) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n                default:\n                    break;\n                }\n            }\n        }\n        Collections.reverse(result);\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        List<Integer> temp = arr.stream()\n                               .filter(s->s > 0 && s < 10)\n                               .map(s -> s.intValue())\n                               .collect(Collectors.toList());\n        Collections.reverse(temp);\n        ArrayList<String> result = new ArrayList<>();\n        for(int i = 0; i < temp.size(); i++) {\n            switch (temp.get(i)) {\n                case 1:\n                    result.add(\"One\");\n                    break;\n                case 2:\n                    result.add(\"Two\");\n                    break;\n                case 3:\n                    result.add(\"Three\");\n                    break;\n                case 4:\n                    result.add(\"Four\");\n                    break;\n                case 5:\n                    result.add(\"Five\");\n                    break;\n                case 6:\n                    result.add(\"Six\");\n                    break;\n                case 7:\n                    result.add(\"Seven\");\n                    break;\n                case 8:\n                    result.add(\"Eight\");\n                    break;\n                case 9:\n                    result.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;", "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Given an array array list of integers, sort the integers that are between 1 and 9 inclusive,\n    // reverse the resulting array array list, and then replace each digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l, (long)8l, (long)2l, (long)3l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\", (String)\"Two\", (String)\"One\", (String)\"One\")))\n    // If the array array list is empty, return an empty array array list:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<String>(Arrays.asList()))\n    // If the array array list has any strange number ignore it:\n    // >>> byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l))))\n    // (new ArrayList<String>(Arrays.asList((String)\"One\")))\n    public static ArrayList<String> byLength(ArrayList<Long> arr) {\n        ArrayList<Long> ints = new ArrayList<Long>();\n        ArrayList<String> names = new ArrayList<String>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0 && arr.get(i) < 10) {\n                ints.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < ints.size(); i++) {\n            switch (ints.get(i).intValue()) {\n                case 1:\n                    names.add(\"One\");\n                    break;\n                case 2:\n                    names.add(\"Two\");\n                    break;\n                case 3:\n                    names.add(\"Three\");\n                    break;\n                case 4:\n                    names.add(\"Four\");\n                    break;\n                case 5:\n                    names.add(\"Five\");\n                    break;\n                case 6:\n                    names.add(\"Six\");\n                    break;\n                case 7:\n                    names.add(\"Seven\");\n                    break;\n                case 8:\n                    names.add(\"Eight\");\n                    break;\n                case 9:\n                    names.add(\"Nine\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        Collections.reverse(names);\n        return names;"], [], [], [], [], [], [], []]